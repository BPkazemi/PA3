
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x87\xac\x16rx\xa8\x8f\x9e\xec\x02\xdf\xe0Rr\xd8\x97'
    
_lr_action_items = {'inherits':([6,],[8,]),'fi':([35,38,41,46,50,55,68,71,72,82,83,84,85,86,87,88,90,91,94,98,100,110,112,118,122,125,127,129,135,137,141,144,152,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-26,-28,-30,-15,-32,135,-19,-31,-29,-20,-18,-21,]),'false':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'rbrace':([9,15,16,27,35,38,41,46,50,55,68,71,72,82,83,84,85,86,87,88,90,91,94,96,98,100,101,110,112,114,118,122,125,129,135,137,141,144,152,],[11,19,21,34,-49,-46,-47,-48,-45,-36,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,110,-27,-50,113,-26,-28,126,-30,-15,-32,-19,-31,-29,-20,-18,-21,]),'in':([35,38,41,46,50,55,68,71,72,82,83,84,85,86,87,88,90,91,94,98,100,107,110,112,118,121,122,125,129,131,135,137,140,141,144,145,146,151,152,155,157,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-24,-26,-28,-30,132,-15,-32,-19,-24,-31,-29,147,-20,-18,-24,-45,-22,-21,-24,-23,]),'colon':([14,24,25,32,54,69,109,123,130,146,],[17,30,31,53,80,93,124,133,138,138,]),'at':([35,38,39,41,46,50,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,90,91,94,98,99,100,101,104,110,111,112,114,117,118,122,125,127,129,131,135,136,137,141,144,146,149,152,153,155,],[-49,-46,64,-47,-48,-45,64,64,64,64,-51,64,64,64,64,64,64,64,64,64,64,64,64,64,-25,64,64,-50,64,64,-26,64,-28,64,64,-30,-15,-32,64,-19,64,-31,64,-29,64,-18,-45,64,64,64,64,]),'tilde':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'if':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'le':([35,38,39,41,46,50,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,90,91,94,98,99,100,101,104,110,111,112,114,117,118,122,125,127,129,131,135,136,137,141,144,146,149,152,153,155,],[-49,-46,63,-47,-48,-45,-36,63,-35,63,-51,63,63,63,63,-38,-41,-34,-44,-40,-42,-43,63,-39,-25,63,63,-50,63,63,-26,63,-28,63,63,-30,-15,-32,63,-19,63,-31,63,-29,63,-18,-45,63,63,63,63,]),'divide':([35,38,39,41,46,50,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,90,91,94,98,99,100,101,104,110,111,112,114,117,118,122,125,127,129,131,135,136,137,141,144,146,149,152,153,155,],[-49,-46,58,-47,-48,-45,-36,58,-35,58,-51,58,58,58,58,58,-41,-34,58,-40,58,58,58,58,-25,58,58,-50,58,58,-26,58,-28,58,58,-30,-15,-32,58,-19,58,-31,58,-29,58,-18,-45,58,58,58,58,]),'rarrow':([134,142,],[143,148,]),'isvoid':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'larrow':([23,50,107,145,146,],[29,76,120,150,76,]),'lt':([35,38,39,41,46,50,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,90,91,94,98,99,100,101,104,110,111,112,114,117,118,122,125,127,129,131,135,136,137,141,144,146,149,152,153,155,],[-49,-46,62,-47,-48,-45,-36,62,-35,62,-51,62,62,62,62,-38,-41,-34,-44,-40,-42,-43,62,-39,-25,62,62,-50,62,62,-26,62,-28,62,62,-30,-15,-32,62,-19,62,-31,62,-29,62,-18,-45,62,62,62,62,]),'esac':([108,154,156,],[122,-16,-17,]),'new':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'type':([3,8,17,30,31,44,53,64,80,93,124,133,138,],[6,10,23,51,52,71,79,89,103,107,134,142,145,]),'$end':([2,4,7,],[0,-1,-2,]),'then':([35,38,41,46,50,55,56,68,71,72,82,83,84,85,86,87,88,90,91,94,98,100,110,112,118,122,125,129,135,137,141,144,152,],[-49,-46,-47,-48,-45,-36,81,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-26,-28,-30,-15,-32,-19,-31,-29,-20,-18,-21,]),'string':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'equals':([35,38,39,41,46,50,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,90,91,94,98,99,100,101,104,110,111,112,114,117,118,122,125,127,129,131,135,136,137,141,144,146,149,152,153,155,],[-49,-46,60,-47,-48,-45,-36,60,-35,60,-51,60,60,60,60,-38,-41,-34,-44,-40,-42,-43,60,-39,-25,60,60,-50,60,60,-26,60,-28,60,60,-30,-15,-32,60,-19,60,-31,60,-29,60,-18,-45,60,60,60,60,]),'else':([35,38,41,46,50,55,68,71,72,82,83,84,85,86,87,88,90,91,94,98,100,104,110,112,118,122,125,129,135,137,141,144,152,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,115,-26,-28,-30,-15,-32,-19,-31,-29,-20,-18,-21,]),'let':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'lparen':([14,29,36,37,40,43,45,47,48,49,50,57,58,59,60,61,62,63,65,66,76,77,78,81,92,96,97,102,106,115,116,120,128,132,139,143,146,147,148,150,154,156,],[18,43,43,43,43,43,43,43,43,43,77,43,43,43,43,43,43,43,43,43,43,43,43,43,106,43,43,43,43,43,128,43,43,43,43,43,77,43,43,43,43,43,]),'not':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'integer':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'true':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'class':([0,2,4,7,],[3,3,-1,-2,]),'pool':([35,38,41,46,50,55,68,71,72,82,83,84,85,86,87,88,90,91,94,98,100,110,111,112,118,122,125,129,135,137,141,144,152,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-26,125,-28,-30,-15,-32,-19,-31,-29,-20,-18,-21,]),'case':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'lbrace':([6,10,29,36,37,40,43,45,47,48,49,51,57,58,59,60,61,62,63,65,66,76,77,78,79,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[9,15,48,48,48,48,48,48,48,48,48,78,48,48,48,48,48,48,48,48,48,48,48,48,102,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'rparen':([18,26,35,38,41,46,50,52,55,68,70,71,72,77,82,83,84,85,86,87,88,90,91,94,98,99,100,103,106,110,112,117,118,122,125,128,129,135,136,137,141,144,152,],[24,32,-49,-46,-47,-48,-45,-13,-36,-35,94,-51,-37,100,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,112,-50,-14,118,-26,-28,129,-30,-15,-32,137,-19,-31,144,-29,-20,-18,-21,]),'semi':([1,5,11,12,13,19,20,21,22,23,34,35,38,39,41,46,50,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,90,91,94,98,99,100,101,104,110,111,112,113,114,117,118,122,125,126,127,129,131,135,136,137,141,144,146,149,152,153,155,],[4,7,-3,16,-11,-5,27,-4,-12,-9,-6,-49,-46,59,-47,-48,-45,-36,59,-35,59,-51,59,59,96,59,59,-41,-34,59,-40,59,59,59,59,-25,59,59,-50,59,59,-26,59,-28,-8,59,59,-30,-15,-32,-7,59,-19,59,-31,59,-29,59,-18,-45,154,59,156,59,]),'of':([35,38,41,46,50,55,68,71,72,73,82,83,84,85,86,87,88,90,91,94,98,100,110,112,118,122,125,129,135,137,141,144,152,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,95,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-26,-28,-30,-15,-32,-19,-31,-29,-20,-18,-21,]),'times':([35,38,39,41,46,50,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,90,91,94,98,99,100,101,104,110,111,112,114,117,118,122,125,127,129,131,135,136,137,141,144,146,149,152,153,155,],[-49,-46,61,-47,-48,-45,-36,61,-35,61,-51,61,61,61,61,61,-41,-34,61,-40,61,61,61,61,-25,61,61,-50,61,61,-26,61,-28,61,61,-30,-15,-32,61,-19,61,-31,61,-29,61,-18,-45,61,61,61,61,]),'while':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'plus':([35,38,39,41,46,50,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,90,91,94,98,99,100,101,104,110,111,112,114,117,118,122,125,127,129,131,135,136,137,141,144,146,149,152,153,155,],[-49,-46,57,-47,-48,-45,-36,57,-35,57,-51,57,57,57,57,-38,-41,-34,57,-40,57,57,57,-39,-25,57,57,-50,57,57,-26,57,-28,57,57,-30,-15,-32,57,-19,57,-31,57,-29,57,-18,-45,57,57,57,57,]),'dot':([35,38,39,41,46,50,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,89,90,91,94,98,99,100,101,104,110,111,112,114,117,118,122,125,127,129,131,135,136,137,141,144,146,149,152,153,155,],[-49,-46,67,-47,-48,-45,67,67,67,67,-51,67,67,67,67,67,67,67,67,67,67,67,105,67,67,-25,67,67,-50,67,67,-26,67,-28,67,67,-30,-15,-32,67,-19,67,-31,67,-29,67,-18,-45,67,67,67,67,]),'comma':([26,35,38,39,41,46,50,52,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,90,91,94,98,99,100,101,103,104,107,110,111,112,114,117,118,122,125,127,129,131,135,136,137,141,144,145,146,149,152,153,155,],[33,-49,-46,65,-47,-48,-45,-13,-36,65,-35,65,-51,-37,65,65,65,-38,-41,-34,-44,-40,-42,-43,65,-39,-25,-27,65,-50,65,-14,65,119,-26,65,-28,65,65,-30,-15,-32,65,-19,139,-31,65,-29,65,-18,119,-45,65,65,65,139,]),'identifier':([9,15,16,18,27,28,29,33,36,37,40,42,43,45,47,48,49,57,58,59,60,61,62,63,65,66,67,76,77,78,81,95,96,97,102,105,106,108,115,119,120,128,132,139,143,147,148,150,154,156,],[14,14,14,25,14,14,50,54,50,50,50,69,50,50,50,50,50,50,50,50,50,50,50,50,50,50,92,50,50,50,50,109,50,50,50,116,50,123,50,130,50,50,50,146,50,50,50,50,-16,-17,]),'minus':([35,38,39,41,46,50,55,56,68,70,71,72,73,74,75,82,83,84,85,86,87,88,90,91,94,98,99,100,101,104,110,111,112,114,117,118,122,125,127,129,131,135,136,137,141,144,146,149,152,153,155,],[-49,-46,66,-47,-48,-45,-36,66,-35,66,-51,66,66,66,66,-38,-41,-34,66,-40,66,66,66,-39,-25,66,66,-50,66,66,-26,66,-28,66,66,-30,-15,-32,66,-19,66,-31,66,-29,66,-18,-45,66,66,66,66,]),'loop':([35,38,41,46,50,55,68,71,72,75,82,83,84,85,86,87,88,90,91,94,98,100,110,112,118,122,125,129,135,137,141,144,152,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,97,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-26,-28,-30,-15,-32,-19,-31,-29,-20,-18,-21,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FEATUREHELPER':([9,15,16,27,28,],[13,13,13,13,13,]),'LETHELPER':([107,131,145,155,],[121,140,151,157,]),'EXPR':([29,36,37,40,43,45,47,48,49,57,58,59,60,61,62,63,65,66,76,77,78,81,96,97,102,106,115,120,128,132,139,143,147,148,150,154,156,],[39,55,56,68,70,72,73,74,75,82,83,84,85,86,87,88,90,91,98,99,101,104,84,111,114,117,127,131,136,141,90,149,152,153,155,84,84,]),'CLASSDEF':([0,2,],[1,5,]),'FEATURE':([9,15,16,27,28,],[12,20,22,22,22,]),'PROGRAM':([0,],[2,]),'CASEHELPER':([95,],[108,]),'FORMAL':([18,],[26,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> CLASSDEF semi','PROGRAM',2,'p_program_one','main.py',43),
  ('PROGRAM -> PROGRAM CLASSDEF semi','PROGRAM',3,'p_program_many','main.py',46),
  ('CLASSDEF -> class type lbrace rbrace','CLASSDEF',4,'p_class_def','main.py',50),
  ('CLASSDEF -> class type lbrace FEATURE semi rbrace','CLASSDEF',6,'p_class_def','main.py',51),
  ('CLASSDEF -> class type inherits type lbrace rbrace','CLASSDEF',6,'p_class_def_inherits','main.py',58),
  ('CLASSDEF -> class type inherits type lbrace FEATURE semi rbrace','CLASSDEF',8,'p_class_def_inherits','main.py',59),
  ('FEATURE -> identifier lparen FORMAL rparen colon type lbrace EXPR rbrace','FEATURE',9,'p_feature','main.py',66),
  ('FEATURE -> identifier lparen rparen colon type lbrace EXPR rbrace','FEATURE',8,'p_feature','main.py',67),
  ('FEATURE -> identifier colon type','FEATURE',3,'p_feature','main.py',68),
  ('FEATURE -> identifier colon type larrow EXPR','FEATURE',5,'p_feature','main.py',69),
  ('FEATURE -> FEATUREHELPER','FEATURE',1,'p_feature','main.py',70),
  ('FEATUREHELPER -> FEATURE semi FEATURE','FEATUREHELPER',3,'p_feature_helper','main.py',81),
  ('FORMAL -> identifier colon type','FORMAL',3,'p_formal','main.py',85),
  ('FORMAL -> FORMAL comma identifier colon type','FORMAL',5,'p_formal','main.py',86),
  ('EXPR -> case EXPR of CASEHELPER esac','EXPR',5,'p_expr_case','main.py',97),
  ('CASEHELPER -> identifier colon type rarrow EXPR semi','CASEHELPER',6,'p_case_helper','main.py',101),
  ('CASEHELPER -> CASEHELPER identifier colon type rarrow EXPR semi','CASEHELPER',7,'p_case_helper','main.py',102),
  ('EXPR -> EXPR at type dot identifier lparen EXPR rparen','EXPR',8,'p_expr_at_dot','main.py',110),
  ('EXPR -> EXPR dot identifier lparen EXPR rparen','EXPR',6,'p_expr_at_dot','main.py',111),
  ('EXPR -> let identifier colon type LETHELPER in EXPR','EXPR',7,'p_expr_let','main.py',120),
  ('EXPR -> let identifier colon type larrow EXPR LETHELPER in EXPR','EXPR',9,'p_expr_let','main.py',121),
  ('LETHELPER -> comma identifier colon type LETHELPER','LETHELPER',5,'p_let_helper','main.py',129),
  ('LETHELPER -> comma identifier colon type larrow EXPR LETHELPER','LETHELPER',7,'p_let_helper','main.py',130),
  ('LETHELPER -> <empty>','LETHELPER',0,'p_let_helper','main.py',131),
  ('EXPR -> lparen EXPR rparen','EXPR',3,'p_expr_seconds','main.py',140),
  ('EXPR -> lbrace EXPR semi rbrace','EXPR',4,'p_expr_seconds','main.py',141),
  ('EXPR -> identifier larrow EXPR','EXPR',3,'p_expr_thirds','main.py',146),
  ('EXPR -> identifier lparen EXPR rparen','EXPR',4,'p_expr_thirds','main.py',147),
  ('EXPR -> EXPR at type dot identifier lparen rparen','EXPR',7,'p_expr_firsts','main.py',152),
  ('EXPR -> EXPR dot identifier lparen rparen','EXPR',5,'p_expr_firsts','main.py',153),
  ('EXPR -> if EXPR then EXPR else EXPR fi','EXPR',7,'p_expr_conditionals','main.py',157),
  ('EXPR -> while EXPR loop EXPR pool','EXPR',5,'p_expr_conditionals','main.py',158),
  ('EXPR -> EXPR comma EXPR','EXPR',3,'p_expr_list','main.py',166),
  ('EXPR -> EXPR semi EXPR','EXPR',3,'p_expr_list','main.py',167),
  ('EXPR -> isvoid EXPR','EXPR',2,'p_expr_doubles','main.py',171),
  ('EXPR -> tilde EXPR','EXPR',2,'p_expr_doubles','main.py',172),
  ('EXPR -> not EXPR','EXPR',2,'p_expr_doubles','main.py',173),
  ('EXPR -> EXPR plus EXPR','EXPR',3,'p_expr_math','main.py',177),
  ('EXPR -> EXPR minus EXPR','EXPR',3,'p_expr_math','main.py',178),
  ('EXPR -> EXPR times EXPR','EXPR',3,'p_expr_math','main.py',179),
  ('EXPR -> EXPR divide EXPR','EXPR',3,'p_expr_math','main.py',180),
  ('EXPR -> EXPR lt EXPR','EXPR',3,'p_expr_math','main.py',181),
  ('EXPR -> EXPR le EXPR','EXPR',3,'p_expr_math','main.py',182),
  ('EXPR -> EXPR equals EXPR','EXPR',3,'p_expr_math','main.py',183),
  ('EXPR -> identifier','EXPR',1,'p_expr_terminal','main.py',190),
  ('EXPR -> integer','EXPR',1,'p_expr_terminal','main.py',191),
  ('EXPR -> string','EXPR',1,'p_expr_terminal','main.py',192),
  ('EXPR -> true','EXPR',1,'p_expr_terminal','main.py',193),
  ('EXPR -> false','EXPR',1,'p_expr_terminal','main.py',194),
  ('EXPR -> identifier lparen rparen','EXPR',3,'p_expr_terminal','main.py',195),
  ('EXPR -> new type','EXPR',2,'p_expr_terminal','main.py',196),
]
