
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'V\xb7\xc3\xc7\xf6F$Q\xb1\x01\x08\xe9T\x06\xd1\x00'
    
_lr_action_items = {'inherits':([7,],[9,]),'fi':([36,39,42,47,51,56,67,70,71,81,82,83,84,85,87,88,91,95,98,108,111,118,124,126,129,131,136,138,140,145,147,150,153,],[-58,-55,-56,-57,-54,-45,-44,-59,-46,-52,-50,-53,-49,-51,-47,-48,-33,-37,-35,-34,-36,-22,-17,-39,138,-24,-27,-38,-21,-25,-23,-28,-26,]),'false':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'rbrace':([10,16,17,29,36,39,42,47,51,56,67,70,71,81,82,83,84,85,87,88,91,93,95,98,99,108,111,114,118,124,126,131,136,138,140,145,147,150,153,],[12,20,22,35,-58,-55,-56,-57,-54,-45,-44,-59,-46,-52,-50,-53,-49,-51,-47,-48,-33,108,-37,-35,113,-34,-36,128,-22,-17,-39,-24,-27,-38,-21,-25,-23,-28,-26,]),'in':([36,39,42,47,51,56,67,70,71,81,82,83,84,85,87,88,91,95,98,104,108,111,118,121,124,126,131,132,134,136,138,140,141,143,145,147,148,150,153,155,],[-58,-55,-56,-57,-54,-45,-44,-59,-46,-52,-50,-53,-49,-51,-47,-48,-33,-37,-35,122,-34,-36,-22,135,-17,-39,-24,-30,144,-27,-38,-21,-29,149,-25,-23,-31,-28,-26,-32,]),'colon':([15,25,27,33,68,107,133,],[18,31,32,54,90,125,142,]),'at':([36,39,40,42,47,51,56,57,67,69,70,71,72,73,75,81,82,83,84,85,87,88,91,95,97,98,99,101,108,109,110,111,114,118,124,126,127,129,131,134,136,138,140,145,147,150,151,153,155,],[-58,-55,63,-56,-57,-54,63,63,63,63,-59,63,63,63,63,63,63,63,63,63,63,63,-33,63,63,-35,63,63,-34,63,63,-36,63,-22,-17,-39,63,63,-24,63,63,-38,-21,63,-23,63,63,63,63,]),'tilde':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'if':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'le':([36,39,40,42,47,51,56,57,67,69,70,71,72,73,75,81,82,83,84,85,87,88,91,95,97,98,99,101,108,109,110,111,114,118,124,126,127,129,131,134,136,138,140,145,147,150,151,153,155,],[-58,-55,58,-56,-57,-54,-45,58,-44,58,-59,58,58,58,58,-52,-50,-53,-49,-51,-47,-48,-33,58,58,-35,58,58,-34,58,58,-36,58,-22,-17,-39,58,58,-24,58,58,-38,-21,58,-23,58,58,58,58,]),'divide':([36,39,40,42,47,51,56,57,67,69,70,71,72,73,75,81,82,83,84,85,87,88,91,95,97,98,99,101,108,109,110,111,114,118,124,126,127,129,131,134,136,138,140,145,147,150,151,153,155,],[-58,-55,59,-56,-57,-54,-45,59,-44,59,-59,59,59,59,59,59,-50,59,-49,59,59,59,-33,59,59,-35,59,59,-34,59,59,-36,59,-22,-17,-39,59,59,-24,59,59,-38,-21,59,-23,59,59,59,59,]),'rarrow':([137,],[146,]),'isvoid':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'larrow':([24,51,104,148,],[30,76,120,152,]),'lt':([36,39,40,42,47,51,56,57,67,69,70,71,72,73,75,81,82,83,84,85,87,88,91,95,97,98,99,101,108,109,110,111,114,118,124,126,127,129,131,134,136,138,140,145,147,150,151,153,155,],[-58,-55,62,-56,-57,-54,-45,62,-44,62,-59,62,62,62,62,-52,-50,-53,-49,-51,-47,-48,-33,62,62,-35,62,62,-34,62,62,-36,62,-22,-17,-39,62,62,-24,62,62,-38,-21,62,-23,62,62,62,62,]),'esac':([105,106,123,154,],[-19,124,-18,-20,]),'new':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'type':([4,9,18,31,32,45,54,63,90,125,142,],[7,11,24,52,53,70,79,86,104,137,148,]),'$end':([2,3,5,8,],[0,-1,-3,-2,]),'then':([36,39,42,47,51,56,57,67,70,71,81,82,83,84,85,87,88,91,95,98,108,111,118,124,126,131,136,138,140,145,147,150,153,],[-58,-55,-56,-57,-54,-45,80,-44,-59,-46,-52,-50,-53,-49,-51,-47,-48,-33,-37,-35,-34,-36,-22,-17,-39,-24,-27,-38,-21,-25,-23,-28,-26,]),'string':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'equals':([36,39,40,42,47,51,56,57,67,69,70,71,72,73,75,81,82,83,84,85,87,88,91,95,97,98,99,101,108,109,110,111,114,118,124,126,127,129,131,134,136,138,140,145,147,150,151,153,155,],[-58,-55,60,-56,-57,-54,-45,60,-44,60,-59,60,60,60,60,-52,-50,-53,-49,-51,-47,-48,-33,60,60,-35,60,60,-34,60,60,-36,60,-22,-17,-39,60,60,-24,60,60,-38,-21,60,-23,60,60,60,60,]),'else':([36,39,42,47,51,56,67,70,71,81,82,83,84,85,87,88,91,95,98,101,108,111,118,124,126,131,136,138,140,145,147,150,153,],[-58,-55,-56,-57,-54,-45,-44,-59,-46,-52,-50,-53,-49,-51,-47,-48,-33,-37,-35,115,-34,-36,-22,-17,-39,-24,-27,-38,-21,-25,-23,-28,-26,]),'let':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'lparen':([15,30,37,38,41,44,46,48,49,50,51,58,59,60,61,62,64,65,76,77,78,80,89,93,94,100,103,112,115,116,120,122,130,135,144,146,149,152,],[19,44,44,44,44,44,44,44,44,44,77,44,44,44,44,44,44,44,44,44,44,44,103,44,44,44,44,44,44,130,44,44,44,44,44,44,44,44,]),'not':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'integer':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'true':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'class':([0,3,5,8,],[4,4,-3,-2,]),'pool':([36,39,42,47,51,56,67,70,71,81,82,83,84,85,87,88,91,95,98,108,110,111,118,124,126,131,136,138,140,145,147,150,153,],[-58,-55,-56,-57,-54,-45,-44,-59,-46,-52,-50,-53,-49,-51,-47,-48,-33,-37,-35,-34,126,-36,-22,-17,-39,-24,-27,-38,-21,-25,-23,-28,-26,]),'case':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'lbrace':([7,11,30,37,38,41,44,46,48,49,50,52,58,59,60,61,62,64,65,76,77,78,79,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[10,16,49,49,49,49,49,49,49,49,49,78,49,49,49,49,49,49,49,49,49,49,100,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'rparen':([19,26,28,36,39,42,47,51,53,55,56,67,69,70,71,77,81,82,83,84,85,87,88,91,95,96,97,98,103,108,111,117,118,124,126,127,130,131,136,138,139,140,145,147,150,153,],[25,-15,33,-58,-55,-56,-57,-54,-16,-14,-45,-44,91,-59,-46,98,-52,-50,-53,-49,-51,-47,-48,-33,-37,111,-41,-35,118,-34,-36,131,-22,-17,-39,-40,140,-24,-27,-38,147,-21,-25,-23,-28,-26,]),'semi':([1,6,12,13,14,20,21,22,23,24,35,36,39,40,42,47,51,56,67,70,71,73,74,81,82,83,84,85,87,88,91,95,98,108,109,111,113,118,124,126,128,131,136,138,140,145,147,150,151,153,],[5,8,-4,17,-9,-6,29,-5,-8,-12,-7,-58,-55,-13,-56,-57,-54,-45,-44,-59,-46,-43,93,-52,-50,-53,-49,-51,-47,-48,-33,-37,-35,-34,-42,-36,-11,-22,-17,-39,-10,-24,-27,-38,-21,-25,-23,-28,154,-26,]),'of':([36,39,42,47,51,56,67,70,71,72,81,82,83,84,85,87,88,91,95,98,108,111,118,124,126,131,136,138,140,145,147,150,153,],[-58,-55,-56,-57,-54,-45,-44,-59,-46,92,-52,-50,-53,-49,-51,-47,-48,-33,-37,-35,-34,-36,-22,-17,-39,-24,-27,-38,-21,-25,-23,-28,-26,]),'times':([36,39,40,42,47,51,56,57,67,69,70,71,72,73,75,81,82,83,84,85,87,88,91,95,97,98,99,101,108,109,110,111,114,118,124,126,127,129,131,134,136,138,140,145,147,150,151,153,155,],[-58,-55,61,-56,-57,-54,-45,61,-44,61,-59,61,61,61,61,61,-50,61,-49,61,61,61,-33,61,61,-35,61,61,-34,61,61,-36,61,-22,-17,-39,61,61,-24,61,61,-38,-21,61,-23,61,61,61,61,]),'while':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'plus':([36,39,40,42,47,51,56,57,67,69,70,71,72,73,75,81,82,83,84,85,87,88,91,95,97,98,99,101,108,109,110,111,114,118,124,126,127,129,131,134,136,138,140,145,147,150,151,153,155,],[-58,-55,64,-56,-57,-54,-45,64,-44,64,-59,64,64,64,64,64,-50,64,-49,64,-47,-48,-33,64,64,-35,64,64,-34,64,64,-36,64,-22,-17,-39,64,64,-24,64,64,-38,-21,64,-23,64,64,64,64,]),'dot':([36,39,40,42,47,51,56,57,67,69,70,71,72,73,75,81,82,83,84,85,86,87,88,91,95,97,98,99,101,108,109,110,111,114,118,124,126,127,129,131,134,136,138,140,145,147,150,151,153,155,],[-58,-55,66,-56,-57,-54,66,66,66,66,-59,66,66,66,66,66,66,66,66,66,102,66,66,-33,66,66,-35,66,66,-34,66,66,-36,66,-22,-17,-39,66,66,-24,66,66,-38,-21,66,-23,66,66,66,66,]),'comma':([26,28,36,39,42,47,51,53,55,56,67,70,71,81,82,83,84,85,87,88,91,95,96,97,98,104,108,111,117,118,124,126,127,131,132,134,136,138,139,140,145,147,148,150,153,155,],[-15,34,-58,-55,-56,-57,-54,-16,-14,-45,-44,-59,-46,-52,-50,-53,-49,-51,-47,-48,-33,-37,112,-41,-35,119,-34,-36,112,-22,-17,-39,-40,-24,119,119,-27,-38,112,-21,-25,-23,-31,-28,-26,-32,]),'identifier':([10,16,17,19,29,30,34,37,38,41,43,44,46,48,49,50,58,59,60,61,62,64,65,66,76,77,78,80,92,93,94,100,102,103,105,106,112,115,119,120,122,123,130,135,144,146,149,152,154,],[15,15,15,27,15,51,27,51,51,51,68,51,51,51,51,51,51,51,51,51,51,51,51,89,51,51,51,51,107,51,51,51,116,51,-19,107,51,51,133,51,51,-18,51,51,51,51,51,51,-20,]),'minus':([36,39,40,42,47,51,56,57,67,69,70,71,72,73,75,81,82,83,84,85,87,88,91,95,97,98,99,101,108,109,110,111,114,118,124,126,127,129,131,134,136,138,140,145,147,150,151,153,155,],[-58,-55,65,-56,-57,-54,-45,65,-44,65,-59,65,65,65,65,65,-50,65,-49,65,-47,-48,-33,65,65,-35,65,65,-34,65,65,-36,65,-22,-17,-39,65,65,-24,65,65,-38,-21,65,-23,65,65,65,65,]),'loop':([36,39,42,47,51,56,67,70,71,75,81,82,83,84,85,87,88,91,95,98,108,111,118,124,126,131,136,138,140,145,147,150,153,],[-58,-55,-56,-57,-54,-45,-44,-59,-46,94,-52,-50,-53,-49,-51,-47,-48,-33,-37,-35,-34,-36,-22,-17,-39,-24,-27,-38,-21,-25,-23,-28,-26,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FEATURELIT':([10,16,17,29,],[14,14,23,23,]),'LETHELPER':([104,132,134,],[121,141,143,]),'EXPRLISTCOMMA':([77,103,130,],[96,117,139,]),'CASELIT':([92,106,],[105,123,]),'FORMALLIT':([19,34,],[26,55,]),'CLASSDEF':([0,3,],[1,6,]),'FEATURE':([10,16,],[13,21,]),'START':([0,],[2,]),'PROGRAM':([0,],[3,]),'CASEHELPER':([92,],[106,]),'EXPR':([30,37,38,41,44,46,48,49,50,58,59,60,61,62,64,65,76,77,78,80,93,94,100,103,112,115,120,122,130,135,144,146,149,152,],[40,56,57,67,69,71,72,73,75,81,82,83,84,85,87,88,95,97,99,101,109,110,114,97,127,129,134,136,97,145,150,151,153,155,]),'LETHELPERLIT':([119,],[132,]),'EXPRLISTSEMI':([49,],[74,]),'FORMAL':([19,],[28,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> START","S'",1,None,None,None),
  ('START -> PROGRAM','START',1,'p_start','main.py',56),
  ('PROGRAM -> PROGRAM CLASSDEF semi','PROGRAM',3,'p_program_one','main.py',63),
  ('PROGRAM -> CLASSDEF semi','PROGRAM',2,'p_program_one','main.py',64),
  ('CLASSDEF -> class type lbrace rbrace','CLASSDEF',4,'p_class_def','main.py',78),
  ('CLASSDEF -> class type lbrace FEATURE semi rbrace','CLASSDEF',6,'p_class_def','main.py',79),
  ('CLASSDEF -> class type inherits type lbrace rbrace','CLASSDEF',6,'p_class_def_inherits','main.py',88),
  ('CLASSDEF -> class type inherits type lbrace FEATURE semi rbrace','CLASSDEF',8,'p_class_def_inherits','main.py',89),
  ('FEATURE -> FEATURE semi FEATURELIT','FEATURE',3,'p_feature_helper','main.py',99),
  ('FEATURE -> FEATURELIT','FEATURE',1,'p_feature_helper','main.py',100),
  ('FEATURELIT -> identifier lparen FORMAL rparen colon type lbrace EXPR rbrace','FEATURELIT',9,'p_feature','main.py',117),
  ('FEATURELIT -> identifier lparen rparen colon type lbrace EXPR rbrace','FEATURELIT',8,'p_feature','main.py',118),
  ('FEATURELIT -> identifier colon type','FEATURELIT',3,'p_feature','main.py',119),
  ('FEATURELIT -> identifier colon type larrow EXPR','FEATURELIT',5,'p_feature','main.py',120),
  ('FORMAL -> FORMAL comma FORMALLIT','FORMAL',3,'p_formal','main.py',137),
  ('FORMAL -> FORMALLIT','FORMAL',1,'p_formal','main.py',138),
  ('FORMALLIT -> identifier colon type','FORMALLIT',3,'p_formal_lit','main.py',147),
  ('EXPR -> case EXPR of CASEHELPER esac','EXPR',5,'p_expr_case','main.py',156),
  ('CASEHELPER -> CASEHELPER CASELIT','CASEHELPER',2,'p_case_helper','main.py',163),
  ('CASEHELPER -> CASELIT','CASEHELPER',1,'p_case_helper','main.py',164),
  ('CASELIT -> identifier colon type rarrow EXPR semi','CASELIT',6,'p_case_lit','main.py',173),
  ('EXPR -> EXPR at type dot identifier lparen rparen','EXPR',7,'p_expr_firsts','main.py',178),
  ('EXPR -> EXPR dot identifier lparen rparen','EXPR',5,'p_expr_firsts','main.py',179),
  ('EXPR -> EXPR at type dot identifier lparen EXPRLISTCOMMA rparen','EXPR',8,'p_expr_at_dot','main.py',187),
  ('EXPR -> EXPR dot identifier lparen EXPRLISTCOMMA rparen','EXPR',6,'p_expr_at_dot','main.py',188),
  ('EXPR -> let identifier colon type LETHELPER in EXPR','EXPR',7,'p_expr_let','main.py',204),
  ('EXPR -> let identifier colon type larrow EXPR LETHELPER in EXPR','EXPR',9,'p_expr_let','main.py',205),
  ('EXPR -> let identifier colon type in EXPR','EXPR',6,'p_expr_let','main.py',206),
  ('EXPR -> let identifier colon type larrow EXPR in EXPR','EXPR',8,'p_expr_let','main.py',207),
  ('LETHELPER -> comma LETHELPERLIT LETHELPER','LETHELPER',3,'p_let_helper','main.py',229),
  ('LETHELPER -> comma LETHELPERLIT','LETHELPER',2,'p_let_helper','main.py',230),
  ('LETHELPERLIT -> identifier colon type','LETHELPERLIT',3,'p_let_lit','main.py',237),
  ('LETHELPERLIT -> identifier colon type larrow EXPR','LETHELPERLIT',5,'p_let_lit','main.py',238),
  ('EXPR -> lparen EXPR rparen','EXPR',3,'p_expr_seconds','main.py',247),
  ('EXPR -> lbrace EXPRLISTSEMI semi rbrace','EXPR',4,'p_expr_seconds','main.py',248),
  ('EXPR -> identifier lparen rparen','EXPR',3,'p_expr_id_call','main.py',256),
  ('EXPR -> identifier lparen EXPRLISTCOMMA rparen','EXPR',4,'p_expr_id_call','main.py',257),
  ('EXPR -> identifier larrow EXPR','EXPR',3,'p_expr_assign','main.py',264),
  ('EXPR -> if EXPR then EXPR else EXPR fi','EXPR',7,'p_expr_conditionals','main.py',270),
  ('EXPR -> while EXPR loop EXPR pool','EXPR',5,'p_expr_conditionals','main.py',271),
  ('EXPRLISTCOMMA -> EXPRLISTCOMMA comma EXPR','EXPRLISTCOMMA',3,'p_expr_list_comma','main.py',292),
  ('EXPRLISTCOMMA -> EXPR','EXPRLISTCOMMA',1,'p_expr_list_comma','main.py',293),
  ('EXPRLISTSEMI -> EXPRLISTSEMI semi EXPR','EXPRLISTSEMI',3,'p_expr_list_semi','main.py',300),
  ('EXPRLISTSEMI -> EXPR','EXPRLISTSEMI',1,'p_expr_list_semi','main.py',301),
  ('EXPR -> isvoid EXPR','EXPR',2,'p_expr_doubles','main.py',309),
  ('EXPR -> tilde EXPR','EXPR',2,'p_expr_doubles','main.py',310),
  ('EXPR -> not EXPR','EXPR',2,'p_expr_doubles','main.py',311),
  ('EXPR -> EXPR plus EXPR','EXPR',3,'p_expr_math','main.py',315),
  ('EXPR -> EXPR minus EXPR','EXPR',3,'p_expr_math','main.py',316),
  ('EXPR -> EXPR times EXPR','EXPR',3,'p_expr_math','main.py',317),
  ('EXPR -> EXPR divide EXPR','EXPR',3,'p_expr_math','main.py',318),
  ('EXPR -> EXPR lt EXPR','EXPR',3,'p_expr_math','main.py',319),
  ('EXPR -> EXPR le EXPR','EXPR',3,'p_expr_math','main.py',320),
  ('EXPR -> EXPR equals EXPR','EXPR',3,'p_expr_math','main.py',321),
  ('EXPR -> identifier','EXPR',1,'p_expr_terminal','main.py',328),
  ('EXPR -> integer','EXPR',1,'p_expr_terminal','main.py',329),
  ('EXPR -> string','EXPR',1,'p_expr_terminal','main.py',330),
  ('EXPR -> true','EXPR',1,'p_expr_terminal','main.py',331),
  ('EXPR -> false','EXPR',1,'p_expr_terminal','main.py',332),
  ('EXPR -> new type','EXPR',2,'p_expr_terminal','main.py',333),
]
