
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xf2T\x85\xba\xac\xa4\x80:\xbb\xb1\xe23\x1e\xb9S\xf8'
    
_lr_action_items = {'inherits':([6,],[8,]),'fi':([31,34,37,42,46,50,63,66,67,76,77,78,79,80,81,82,84,85,88,92,94,103,105,110,114,117,119,121,127,129,133,136,144,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-26,-28,-30,-14,-32,127,-22,-31,-29,-23,-21,-24,]),'false':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'rbrace':([9,14,15,19,21,22,31,34,35,37,42,46,50,63,66,67,76,77,78,79,80,81,82,84,85,88,90,92,94,103,105,106,110,114,117,118,121,127,129,133,136,144,],[11,18,20,25,-10,-8,-49,-46,-9,-47,-48,-45,-36,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,103,-27,-50,-26,-28,118,-30,-14,-32,-7,-22,-31,-29,-23,-21,-24,]),'in':([31,34,37,42,46,50,63,66,67,76,77,78,79,80,81,82,84,85,88,92,94,100,103,105,110,113,114,117,121,123,127,129,132,133,136,137,138,143,144,147,149,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-20,-26,-28,-30,124,-14,-32,-22,-20,-31,-29,139,-23,-21,-20,-45,-18,-24,-20,-19,]),'colon':([13,23,29,49,64,102,115,122,138,],[16,28,48,74,87,116,125,130,130,]),'at':([31,34,35,37,42,46,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,84,85,88,92,93,94,97,103,104,105,106,109,110,114,117,119,121,123,127,128,129,133,136,138,141,144,145,147,],[-49,-46,59,-47,-48,-45,59,59,59,59,-51,59,59,59,59,59,59,59,59,59,59,59,59,59,-25,59,59,-50,59,-26,59,-28,59,59,-30,-14,-32,59,-22,59,-31,59,-29,59,-21,-45,59,59,59,59,]),'tilde':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'if':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'le':([31,34,35,37,42,46,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,84,85,88,92,93,94,97,103,104,105,106,109,110,114,117,119,121,123,127,128,129,133,136,138,141,144,145,147,],[-49,-46,58,-47,-48,-45,-36,58,-35,58,-51,58,58,58,58,-38,-41,58,None,-40,None,None,58,-39,-25,58,58,-50,58,-26,58,-28,58,58,-30,-14,-32,58,-22,58,-31,58,-29,58,-21,-45,58,58,58,58,]),'divide':([31,34,35,37,42,46,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,84,85,88,92,93,94,97,103,104,105,106,109,110,114,117,119,121,123,127,128,129,133,136,138,141,144,145,147,],[-49,-46,53,-47,-48,-45,-36,53,-35,53,-51,53,53,53,53,53,-41,53,53,-40,53,53,53,53,-25,53,53,-50,53,-26,53,-28,53,53,-30,-14,-32,53,-22,53,-31,53,-29,53,-21,-45,53,53,53,53,]),'rarrow':([126,134,],[135,140,]),'isvoid':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'larrow':([22,46,100,137,138,],[27,71,112,142,71,]),'lt':([31,34,35,37,42,46,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,84,85,88,92,93,94,97,103,104,105,106,109,110,114,117,119,121,123,127,128,129,133,136,138,141,144,145,147,],[-49,-46,57,-47,-48,-45,-36,57,-35,57,-51,57,57,57,57,-38,-41,57,None,-40,None,None,57,-39,-25,57,57,-50,57,-26,57,-28,57,57,-30,-14,-32,57,-22,57,-31,57,-29,57,-21,-45,57,57,57,57,]),'esac':([89,101,146,148,],[-17,114,-15,-16,]),'new':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'type':([3,8,16,28,40,48,59,74,87,116,125,130,],[6,10,22,47,66,73,83,96,100,126,134,137,]),'$end':([2,4,7,],[0,-1,-2,]),'then':([31,34,37,42,46,50,51,63,66,67,76,77,78,79,80,81,82,84,85,88,92,94,103,105,110,114,117,121,127,129,133,136,144,],[-49,-46,-47,-48,-45,-36,75,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-26,-28,-30,-14,-32,-22,-31,-29,-23,-21,-24,]),'string':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'equals':([31,34,35,37,42,46,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,84,85,88,92,93,94,97,103,104,105,106,109,110,114,117,119,121,123,127,128,129,133,136,138,141,144,145,147,],[-49,-46,55,-47,-48,-45,-36,55,-35,55,-51,55,55,55,55,-38,-41,55,None,-40,None,None,55,-39,-25,55,55,-50,55,-26,55,-28,55,55,-30,-14,-32,55,-22,55,-31,55,-29,55,-21,-45,55,55,55,55,]),'else':([31,34,37,42,46,50,63,66,67,76,77,78,79,80,81,82,84,85,88,92,94,97,103,105,110,114,117,121,127,129,133,136,144,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,107,-26,-28,-30,-14,-32,-22,-31,-29,-23,-21,-24,]),'let':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'lparen':([13,27,32,33,36,39,41,43,44,45,46,52,53,54,55,56,57,58,60,61,71,72,75,86,90,91,95,99,107,108,112,120,124,131,135,138,139,140,142,146,148,],[17,39,39,39,39,39,39,39,39,39,72,39,39,39,39,39,39,39,39,39,39,39,39,99,39,39,39,39,39,120,39,39,39,39,39,72,39,39,39,39,39,]),'not':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'integer':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'true':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'class':([0,2,4,7,],[3,3,-1,-2,]),'pool':([31,34,37,42,46,50,63,66,67,76,77,78,79,80,81,82,84,85,88,92,94,103,104,105,110,114,117,121,127,129,133,136,144,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-26,117,-28,-30,-14,-32,-22,-31,-29,-23,-21,-24,]),'case':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'lbrace':([6,10,27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,73,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[9,14,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,95,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'rparen':([17,24,31,34,37,42,46,47,50,63,65,66,67,72,76,77,78,79,80,81,82,84,85,88,92,93,94,96,99,103,105,109,110,114,117,120,121,127,128,129,133,136,144,],[-13,29,-49,-46,-47,-48,-45,-11,-36,-35,88,-51,-37,94,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,105,-50,-12,110,-26,-28,121,-30,-14,-32,129,-22,-31,136,-29,-23,-21,-24,]),'semi':([1,5,11,12,18,19,20,21,22,25,31,34,35,37,42,46,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,84,85,88,92,93,94,97,103,104,105,106,109,110,114,117,118,119,121,123,127,128,129,133,136,138,141,144,145,147,],[4,7,-3,15,-5,26,-4,26,-8,-6,-49,-46,-9,-47,-48,-45,-36,54,-35,54,-51,-37,54,90,54,-38,-41,54,-44,-40,-42,-43,54,-39,-25,-27,54,-50,54,-26,54,-28,54,54,-30,-14,-32,-7,54,-22,54,-31,54,-29,54,-21,-45,146,54,148,54,]),'of':([31,34,37,42,46,50,63,66,67,68,76,77,78,79,80,81,82,84,85,88,92,94,103,105,110,114,117,121,127,129,133,136,144,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,89,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-26,-28,-30,-14,-32,-22,-31,-29,-23,-21,-24,]),'times':([31,34,35,37,42,46,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,84,85,88,92,93,94,97,103,104,105,106,109,110,114,117,119,121,123,127,128,129,133,136,138,141,144,145,147,],[-49,-46,56,-47,-48,-45,-36,56,-35,56,-51,56,56,56,56,56,-41,56,56,-40,56,56,56,56,-25,56,56,-50,56,-26,56,-28,56,56,-30,-14,-32,56,-22,56,-31,56,-29,56,-21,-45,56,56,56,56,]),'while':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'plus':([31,34,35,37,42,46,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,84,85,88,92,93,94,97,103,104,105,106,109,110,114,117,119,121,123,127,128,129,133,136,138,141,144,145,147,],[-49,-46,52,-47,-48,-45,-36,52,-35,52,-51,52,52,52,52,-38,-41,52,52,-40,52,52,52,-39,-25,52,52,-50,52,-26,52,-28,52,52,-30,-14,-32,52,-22,52,-31,52,-29,52,-21,-45,52,52,52,52,]),'dot':([31,34,35,37,42,46,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,85,88,92,93,94,97,103,104,105,106,109,110,114,117,119,121,123,127,128,129,133,136,138,141,144,145,147,],[-49,-46,62,-47,-48,-45,62,62,62,62,-51,62,62,62,62,62,62,62,62,62,62,62,98,62,62,-25,62,62,-50,62,-26,62,-28,62,62,-30,-14,-32,62,-22,62,-31,62,-29,62,-21,-45,62,62,62,62,]),'comma':([17,24,31,34,35,37,42,46,47,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,84,85,88,92,93,94,96,97,100,103,104,105,106,109,110,114,117,119,121,123,127,128,129,133,136,137,138,141,144,145,147,],[-13,30,-49,-46,60,-47,-48,-45,-11,-36,60,-35,60,-51,-37,60,60,60,-38,-41,60,-44,-40,-42,-43,60,-39,-25,-27,60,-50,-12,60,111,-26,60,-28,60,60,-30,-14,-32,60,-22,131,-31,60,-29,60,-21,111,-45,60,60,60,131,]),'identifier':([9,14,15,17,26,27,30,32,33,36,38,39,41,43,44,45,52,53,54,55,56,57,58,60,61,62,71,72,75,89,90,91,95,98,99,101,107,111,112,120,124,131,135,139,140,142,146,148,],[13,13,13,23,13,46,49,46,46,46,64,46,46,46,46,46,46,46,46,46,46,46,46,46,46,86,46,46,46,102,46,46,46,108,46,115,46,122,46,46,46,138,46,46,46,46,46,46,]),'minus':([31,34,35,37,42,46,50,51,63,65,66,67,68,69,70,76,77,78,79,80,81,82,84,85,88,92,93,94,97,103,104,105,106,109,110,114,117,119,121,123,127,128,129,133,136,138,141,144,145,147,],[-49,-46,61,-47,-48,-45,-36,61,-35,61,-51,61,61,61,61,-38,-41,61,61,-40,61,61,61,-39,-25,61,61,-50,61,-26,61,-28,61,61,-30,-14,-32,61,-22,61,-31,61,-29,61,-21,-45,61,61,61,61,]),'loop':([31,34,37,42,46,50,63,66,67,70,76,77,78,79,80,81,82,84,85,88,92,94,103,105,110,114,117,121,127,129,133,136,144,],[-49,-46,-47,-48,-45,-36,-35,-51,-37,91,-38,-41,-34,-44,-40,-42,-43,-33,-39,-25,-27,-50,-26,-28,-30,-14,-32,-22,-31,-29,-23,-21,-24,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'LETHELPER':([100,123,137,147,],[113,132,143,149,]),'EXPR':([27,32,33,36,39,41,43,44,45,52,53,54,55,56,57,58,60,61,71,72,75,90,91,95,99,107,112,120,124,131,135,139,140,142,146,148,],[35,50,51,63,65,67,68,69,70,76,77,78,79,80,81,82,84,85,92,93,97,78,104,106,109,119,123,128,133,84,141,144,145,147,78,78,]),'CLASSDEF':([0,2,],[1,5,]),'FEATURE':([9,14,15,26,],[12,19,21,21,]),'PROGRAM':([0,],[2,]),'CASEHELPER':([89,],[101,]),'FORMAL':([17,],[24,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> CLASSDEF semi','PROGRAM',2,'p_program_one','main.py',43),
  ('PROGRAM -> PROGRAM CLASSDEF semi','PROGRAM',3,'p_program_many','main.py',46),
  ('CLASSDEF -> class type lbrace rbrace','CLASSDEF',4,'p_class_def','main.py',50),
  ('CLASSDEF -> class type lbrace FEATURE semi rbrace','CLASSDEF',6,'p_class_def','main.py',51),
  ('CLASSDEF -> class type inherits type lbrace rbrace','CLASSDEF',6,'p_class_def_inherits','main.py',58),
  ('CLASSDEF -> class type inherits type lbrace FEATURE rbrace','CLASSDEF',7,'p_class_def_inherits','main.py',59),
  ('FEATURE -> identifier lparen FORMAL rparen colon type lbrace EXPR rbrace','FEATURE',9,'p_feature','main.py',66),
  ('FEATURE -> identifier colon type','FEATURE',3,'p_feature','main.py',67),
  ('FEATURE -> identifier colon type larrow EXPR','FEATURE',5,'p_feature','main.py',68),
  ('FEATURE -> FEATURE semi FEATURE','FEATURE',3,'p_feature','main.py',69),
  ('FORMAL -> identifier colon type','FORMAL',3,'p_formal','main.py',78),
  ('FORMAL -> FORMAL comma identifier colon type','FORMAL',5,'p_formal','main.py',79),
  ('FORMAL -> <empty>','FORMAL',0,'p_formal','main.py',80),
  ('EXPR -> case EXPR of CASEHELPER esac','EXPR',5,'p_expr_case','main.py',93),
  ('CASEHELPER -> identifier colon type rarrow EXPR semi','CASEHELPER',6,'p_case_helper','main.py',97),
  ('CASEHELPER -> CASEHELPER identifier colon type rarrow EXPR semi','CASEHELPER',7,'p_case_helper','main.py',98),
  ('CASEHELPER -> <empty>','CASEHELPER',0,'p_case_helper','main.py',99),
  ('LETHELPER -> comma identifier colon type LETHELPER','LETHELPER',5,'p_let_helper','main.py',102),
  ('LETHELPER -> comma identifier colon type larrow EXPR LETHELPER','LETHELPER',7,'p_let_helper','main.py',103),
  ('LETHELPER -> <empty>','LETHELPER',0,'p_let_helper','main.py',104),
  ('EXPR -> EXPR at type dot identifier lparen EXPR rparen','EXPR',8,'p_expr_at_dot','main.py',107),
  ('EXPR -> EXPR dot identifier lparen EXPR rparen','EXPR',6,'p_expr_at_dot','main.py',108),
  ('EXPR -> let identifier colon type LETHELPER in EXPR','EXPR',7,'p_expr_let','main.py',116),
  ('EXPR -> let identifier colon type larrow EXPR LETHELPER in EXPR','EXPR',9,'p_expr_let','main.py',117),
  ('EXPR -> lparen EXPR rparen','EXPR',3,'p_expr_seconds','main.py',125),
  ('EXPR -> lbrace EXPR semi rbrace','EXPR',4,'p_expr_seconds','main.py',126),
  ('EXPR -> identifier larrow EXPR','EXPR',3,'p_expr_thirds','main.py',131),
  ('EXPR -> identifier lparen EXPR rparen','EXPR',4,'p_expr_thirds','main.py',132),
  ('EXPR -> EXPR at type dot identifier lparen rparen','EXPR',7,'p_expr_firsts','main.py',137),
  ('EXPR -> EXPR dot identifier lparen rparen','EXPR',5,'p_expr_firsts','main.py',138),
  ('EXPR -> if EXPR then EXPR else EXPR fi','EXPR',7,'p_expr_conditionals','main.py',142),
  ('EXPR -> while EXPR loop EXPR pool','EXPR',5,'p_expr_conditionals','main.py',143),
  ('EXPR -> EXPR comma EXPR','EXPR',3,'p_expr_list','main.py',151),
  ('EXPR -> EXPR semi EXPR','EXPR',3,'p_expr_list','main.py',152),
  ('EXPR -> isvoid EXPR','EXPR',2,'p_expr_doubles','main.py',156),
  ('EXPR -> tilde EXPR','EXPR',2,'p_expr_doubles','main.py',157),
  ('EXPR -> not EXPR','EXPR',2,'p_expr_doubles','main.py',158),
  ('EXPR -> EXPR plus EXPR','EXPR',3,'p_expr_math','main.py',162),
  ('EXPR -> EXPR minus EXPR','EXPR',3,'p_expr_math','main.py',163),
  ('EXPR -> EXPR times EXPR','EXPR',3,'p_expr_math','main.py',164),
  ('EXPR -> EXPR divide EXPR','EXPR',3,'p_expr_math','main.py',165),
  ('EXPR -> EXPR lt EXPR','EXPR',3,'p_expr_math','main.py',166),
  ('EXPR -> EXPR le EXPR','EXPR',3,'p_expr_math','main.py',167),
  ('EXPR -> EXPR equals EXPR','EXPR',3,'p_expr_math','main.py',168),
  ('EXPR -> identifier','EXPR',1,'p_expr_terminal','main.py',175),
  ('EXPR -> integer','EXPR',1,'p_expr_terminal','main.py',176),
  ('EXPR -> string','EXPR',1,'p_expr_terminal','main.py',177),
  ('EXPR -> true','EXPR',1,'p_expr_terminal','main.py',178),
  ('EXPR -> false','EXPR',1,'p_expr_terminal','main.py',179),
  ('EXPR -> identifier lparen rparen','EXPR',3,'p_expr_terminal','main.py',180),
  ('EXPR -> new type','EXPR',2,'p_expr_terminal','main.py',181),
]
