
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'U\xe0U\xa3[\xcf;\xc9\xd7\xed\x8f+4\x07lN'
    
_lr_action_items = {'inherits':([6,],[8,]),'fi':([34,37,40,45,49,54,67,70,71,81,82,83,84,85,86,87,89,90,93,97,99,109,111,117,121,124,126,128,134,136,140,143,151,],[-48,-45,-46,-47,-44,-35,-34,-50,-36,-37,-40,-33,-43,-39,-41,-42,-32,-38,-24,-26,-49,-25,-27,-29,-14,-31,134,-18,-30,-28,-19,-17,-20,]),'false':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'rbrace':([9,14,15,26,34,37,40,45,49,54,67,70,71,81,82,83,84,85,86,87,89,90,93,95,97,99,100,109,111,113,117,121,124,128,134,136,140,143,151,],[11,18,20,33,-48,-45,-46,-47,-44,-35,-34,-50,-36,-37,-40,-33,-43,-39,-41,-42,-32,-38,-24,109,-26,-49,112,-25,-27,125,-29,-14,-31,-18,-30,-28,-19,-17,-20,]),'in':([34,37,40,45,49,54,67,70,71,81,82,83,84,85,86,87,89,90,93,97,99,106,109,111,117,120,121,124,128,130,134,136,139,140,143,144,145,150,151,154,156,],[-48,-45,-46,-47,-44,-35,-34,-50,-36,-37,-40,-33,-43,-39,-41,-42,-32,-38,-24,-26,-49,-23,-25,-27,-29,131,-14,-31,-18,-23,-30,-28,146,-19,-17,-23,-44,-21,-20,-23,-22,]),'colon':([13,23,24,31,53,68,108,122,129,145,],[16,29,30,52,79,92,123,132,137,137,]),'at':([34,37,38,40,45,49,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,89,90,93,97,98,99,100,103,109,110,111,113,116,117,121,124,126,128,130,134,135,136,140,143,145,148,151,152,154,],[-48,-45,63,-46,-47,-44,63,63,63,63,-50,63,63,63,63,63,63,63,63,63,63,63,63,63,-24,63,63,-49,63,63,-25,63,-27,63,63,-29,-14,-31,63,-18,63,-30,63,-28,63,-17,-44,63,63,63,63,]),'tilde':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'if':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'le':([34,37,38,40,45,49,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,89,90,93,97,98,99,100,103,109,110,111,113,116,117,121,124,126,128,130,134,135,136,140,143,145,148,151,152,154,],[-48,-45,62,-46,-47,-44,-35,62,-34,62,-50,62,62,62,62,-37,-40,62,-43,-39,-41,-42,62,-38,-24,62,62,-49,62,62,-25,62,-27,62,62,-29,-14,-31,62,-18,62,-30,62,-28,62,-17,-44,62,62,62,62,]),'divide':([34,37,38,40,45,49,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,89,90,93,97,98,99,100,103,109,110,111,113,116,117,121,124,126,128,130,134,135,136,140,143,145,148,151,152,154,],[-48,-45,57,-46,-47,-44,-35,57,-34,57,-50,57,57,57,57,57,-40,57,57,-39,57,57,57,57,-24,57,57,-49,57,57,-25,57,-27,57,57,-29,-14,-31,57,-18,57,-30,57,-28,57,-17,-44,57,57,57,57,]),'rarrow':([133,141,],[142,147,]),'isvoid':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'larrow':([22,49,106,144,145,],[28,75,119,149,75,]),'lt':([34,37,38,40,45,49,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,89,90,93,97,98,99,100,103,109,110,111,113,116,117,121,124,126,128,130,134,135,136,140,143,145,148,151,152,154,],[-48,-45,61,-46,-47,-44,-35,61,-34,61,-50,61,61,61,61,-37,-40,61,-43,-39,-41,-42,61,-38,-24,61,61,-49,61,61,-25,61,-27,61,61,-29,-14,-31,61,-18,61,-30,61,-28,61,-17,-44,61,61,61,61,]),'esac':([107,153,155,],[121,-15,-16,]),'new':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'type':([3,8,16,29,30,43,52,63,79,92,123,132,137,],[6,10,22,50,51,70,78,88,102,106,133,141,144,]),'$end':([2,4,7,],[0,-1,-2,]),'then':([34,37,40,45,49,54,55,67,70,71,81,82,83,84,85,86,87,89,90,93,97,99,109,111,117,121,124,128,134,136,140,143,151,],[-48,-45,-46,-47,-44,-35,80,-34,-50,-36,-37,-40,-33,-43,-39,-41,-42,-32,-38,-24,-26,-49,-25,-27,-29,-14,-31,-18,-30,-28,-19,-17,-20,]),'string':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'equals':([34,37,38,40,45,49,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,89,90,93,97,98,99,100,103,109,110,111,113,116,117,121,124,126,128,130,134,135,136,140,143,145,148,151,152,154,],[-48,-45,59,-46,-47,-44,-35,59,-34,59,-50,59,59,59,59,-37,-40,59,-43,-39,-41,-42,59,-38,-24,59,59,-49,59,59,-25,59,-27,59,59,-29,-14,-31,59,-18,59,-30,59,-28,59,-17,-44,59,59,59,59,]),'else':([34,37,40,45,49,54,67,70,71,81,82,83,84,85,86,87,89,90,93,97,99,103,109,111,117,121,124,128,134,136,140,143,151,],[-48,-45,-46,-47,-44,-35,-34,-50,-36,-37,-40,-33,-43,-39,-41,-42,-32,-38,-24,-26,-49,114,-25,-27,-29,-14,-31,-18,-30,-28,-19,-17,-20,]),'let':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'lparen':([13,28,35,36,39,42,44,46,47,48,49,56,57,58,59,60,61,62,64,65,75,76,77,80,91,95,96,101,105,114,115,119,127,131,138,142,145,146,147,149,153,155,],[17,42,42,42,42,42,42,42,42,42,76,42,42,42,42,42,42,42,42,42,42,42,42,42,105,42,42,42,42,42,127,42,42,42,42,42,76,42,42,42,42,42,]),'not':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'integer':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'true':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'class':([0,2,4,7,],[3,3,-1,-2,]),'pool':([34,37,40,45,49,54,67,70,71,81,82,83,84,85,86,87,89,90,93,97,99,109,110,111,117,121,124,128,134,136,140,143,151,],[-48,-45,-46,-47,-44,-35,-34,-50,-36,-37,-40,-33,-43,-39,-41,-42,-32,-38,-24,-26,-49,-25,124,-27,-29,-14,-31,-18,-30,-28,-19,-17,-20,]),'case':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'lbrace':([6,10,28,35,36,39,42,44,46,47,48,50,56,57,58,59,60,61,62,64,65,75,76,77,78,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[9,14,47,47,47,47,47,47,47,47,47,77,47,47,47,47,47,47,47,47,47,47,47,47,101,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'rparen':([17,25,34,37,40,45,49,51,54,67,69,70,71,76,81,82,83,84,85,86,87,89,90,93,97,98,99,102,105,109,111,116,117,121,124,127,128,134,135,136,140,143,151,],[23,31,-48,-45,-46,-47,-44,-12,-35,-34,93,-50,-36,99,-37,-40,-33,-43,-39,-41,-42,-32,-38,-24,-26,111,-49,-13,117,-25,-27,128,-29,-14,-31,136,-18,-30,143,-28,-19,-17,-20,]),'semi':([1,5,11,12,18,19,20,21,22,33,34,37,38,40,45,49,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,89,90,93,97,98,99,100,103,109,110,111,112,113,116,117,121,124,125,126,128,130,134,135,136,140,143,145,148,151,152,154,],[4,7,-3,15,-5,26,-4,27,-9,-6,-48,-45,-10,-46,-47,-44,-35,58,-34,58,-50,-36,58,95,58,-37,-40,58,-43,-39,-41,-42,58,-38,-24,-26,58,-49,58,58,-25,58,-27,-8,58,58,-29,-14,-31,-7,58,-18,58,-30,58,-28,58,-17,-44,153,58,155,58,]),'of':([34,37,40,45,49,54,67,70,71,72,81,82,83,84,85,86,87,89,90,93,97,99,109,111,117,121,124,128,134,136,140,143,151,],[-48,-45,-46,-47,-44,-35,-34,-50,-36,94,-37,-40,-33,-43,-39,-41,-42,-32,-38,-24,-26,-49,-25,-27,-29,-14,-31,-18,-30,-28,-19,-17,-20,]),'times':([34,37,38,40,45,49,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,89,90,93,97,98,99,100,103,109,110,111,113,116,117,121,124,126,128,130,134,135,136,140,143,145,148,151,152,154,],[-48,-45,60,-46,-47,-44,-35,60,-34,60,-50,60,60,60,60,60,-40,60,60,-39,60,60,60,60,-24,60,60,-49,60,60,-25,60,-27,60,60,-29,-14,-31,60,-18,60,-30,60,-28,60,-17,-44,60,60,60,60,]),'while':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'plus':([34,37,38,40,45,49,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,89,90,93,97,98,99,100,103,109,110,111,113,116,117,121,124,126,128,130,134,135,136,140,143,145,148,151,152,154,],[-48,-45,56,-46,-47,-44,-35,56,-34,56,-50,56,56,56,56,-37,-40,56,56,-39,56,56,56,-38,-24,56,56,-49,56,56,-25,56,-27,56,56,-29,-14,-31,56,-18,56,-30,56,-28,56,-17,-44,56,56,56,56,]),'dot':([34,37,38,40,45,49,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,88,89,90,93,97,98,99,100,103,109,110,111,113,116,117,121,124,126,128,130,134,135,136,140,143,145,148,151,152,154,],[-48,-45,66,-46,-47,-44,66,66,66,66,-50,66,66,66,66,66,66,66,66,66,66,66,104,66,66,-24,66,66,-49,66,66,-25,66,-27,66,66,-29,-14,-31,66,-18,66,-30,66,-28,66,-17,-44,66,66,66,66,]),'comma':([25,34,37,38,40,45,49,51,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,89,90,93,97,98,99,100,102,103,106,109,110,111,113,116,117,121,124,126,128,130,134,135,136,140,143,144,145,148,151,152,154,],[32,-48,-45,64,-46,-47,-44,-12,-35,64,-34,64,-50,-36,64,64,64,-37,-40,64,-43,-39,-41,-42,64,-38,-24,-26,64,-49,64,-13,64,118,-25,64,-27,64,64,-29,-14,-31,64,-18,138,-30,64,-28,64,-17,118,-44,64,64,64,138,]),'identifier':([9,14,15,17,26,27,28,32,35,36,39,41,42,44,46,47,48,56,57,58,59,60,61,62,64,65,66,75,76,77,80,94,95,96,101,104,105,107,114,118,119,127,131,138,142,146,147,149,153,155,],[13,13,13,24,13,13,49,53,49,49,49,68,49,49,49,49,49,49,49,49,49,49,49,49,49,49,91,49,49,49,49,108,49,49,49,115,49,122,49,129,49,49,49,145,49,49,49,49,49,49,]),'minus':([34,37,38,40,45,49,54,55,67,69,70,71,72,73,74,81,82,83,84,85,86,87,89,90,93,97,98,99,100,103,109,110,111,113,116,117,121,124,126,128,130,134,135,136,140,143,145,148,151,152,154,],[-48,-45,65,-46,-47,-44,-35,65,-34,65,-50,65,65,65,65,-37,-40,65,65,-39,65,65,65,-38,-24,65,65,-49,65,65,-25,65,-27,65,65,-29,-14,-31,65,-18,65,-30,65,-28,65,-17,-44,65,65,65,65,]),'loop':([34,37,40,45,49,54,67,70,71,74,81,82,83,84,85,86,87,89,90,93,97,99,109,111,117,121,124,128,134,136,140,143,151,],[-48,-45,-46,-47,-44,-35,-34,-50,-36,96,-37,-40,-33,-43,-39,-41,-42,-32,-38,-24,-26,-49,-25,-27,-29,-14,-31,-18,-30,-28,-19,-17,-20,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'LETHELPER':([106,130,144,154,],[120,139,150,156,]),'EXPR':([28,35,36,39,42,44,46,47,48,56,57,58,59,60,61,62,64,65,75,76,77,80,95,96,101,105,114,119,127,131,138,142,146,147,149,153,155,],[38,54,55,67,69,71,72,73,74,81,82,83,84,85,86,87,89,90,97,98,100,103,83,110,113,116,126,130,135,140,89,148,151,152,154,83,83,]),'CLASSDEF':([0,2,],[1,5,]),'FEATURE':([9,14,15,26,27,],[12,19,21,21,21,]),'PROGRAM':([0,],[2,]),'CASEHELPER':([94,],[107,]),'FORMAL':([17,],[25,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> CLASSDEF semi','PROGRAM',2,'p_program_one','main.py',43),
  ('PROGRAM -> PROGRAM CLASSDEF semi','PROGRAM',3,'p_program_many','main.py',46),
  ('CLASSDEF -> class type lbrace rbrace','CLASSDEF',4,'p_class_def','main.py',50),
  ('CLASSDEF -> class type lbrace FEATURE semi rbrace','CLASSDEF',6,'p_class_def','main.py',51),
  ('CLASSDEF -> class type inherits type lbrace rbrace','CLASSDEF',6,'p_class_def_inherits','main.py',58),
  ('CLASSDEF -> class type inherits type lbrace FEATURE semi rbrace','CLASSDEF',8,'p_class_def_inherits','main.py',59),
  ('FEATURE -> identifier lparen FORMAL rparen colon type lbrace EXPR rbrace','FEATURE',9,'p_feature','main.py',66),
  ('FEATURE -> identifier lparen rparen colon type lbrace EXPR rbrace','FEATURE',8,'p_feature','main.py',67),
  ('FEATURE -> identifier colon type','FEATURE',3,'p_feature','main.py',68),
  ('FEATURE -> identifier colon type larrow EXPR','FEATURE',5,'p_feature','main.py',69),
  ('FEATURE -> FEATURE semi FEATURE','FEATURE',3,'p_feature_helper','main.py',80),
  ('FORMAL -> identifier colon type','FORMAL',3,'p_formal','main.py',84),
  ('FORMAL -> FORMAL comma identifier colon type','FORMAL',5,'p_formal','main.py',85),
  ('EXPR -> case EXPR of CASEHELPER esac','EXPR',5,'p_expr_case','main.py',96),
  ('CASEHELPER -> identifier colon type rarrow EXPR semi','CASEHELPER',6,'p_case_helper','main.py',100),
  ('CASEHELPER -> CASEHELPER identifier colon type rarrow EXPR semi','CASEHELPER',7,'p_case_helper','main.py',101),
  ('EXPR -> EXPR at type dot identifier lparen EXPR rparen','EXPR',8,'p_expr_at_dot','main.py',109),
  ('EXPR -> EXPR dot identifier lparen EXPR rparen','EXPR',6,'p_expr_at_dot','main.py',110),
  ('EXPR -> let identifier colon type LETHELPER in EXPR','EXPR',7,'p_expr_let','main.py',119),
  ('EXPR -> let identifier colon type larrow EXPR LETHELPER in EXPR','EXPR',9,'p_expr_let','main.py',120),
  ('LETHELPER -> comma identifier colon type LETHELPER','LETHELPER',5,'p_let_helper','main.py',128),
  ('LETHELPER -> comma identifier colon type larrow EXPR LETHELPER','LETHELPER',7,'p_let_helper','main.py',129),
  ('LETHELPER -> <empty>','LETHELPER',0,'p_let_helper','main.py',130),
  ('EXPR -> lparen EXPR rparen','EXPR',3,'p_expr_seconds','main.py',139),
  ('EXPR -> lbrace EXPR semi rbrace','EXPR',4,'p_expr_seconds','main.py',140),
  ('EXPR -> identifier larrow EXPR','EXPR',3,'p_expr_thirds','main.py',145),
  ('EXPR -> identifier lparen EXPR rparen','EXPR',4,'p_expr_thirds','main.py',146),
  ('EXPR -> EXPR at type dot identifier lparen rparen','EXPR',7,'p_expr_firsts','main.py',151),
  ('EXPR -> EXPR dot identifier lparen rparen','EXPR',5,'p_expr_firsts','main.py',152),
  ('EXPR -> if EXPR then EXPR else EXPR fi','EXPR',7,'p_expr_conditionals','main.py',156),
  ('EXPR -> while EXPR loop EXPR pool','EXPR',5,'p_expr_conditionals','main.py',157),
  ('EXPR -> EXPR comma EXPR','EXPR',3,'p_expr_list','main.py',165),
  ('EXPR -> EXPR semi EXPR','EXPR',3,'p_expr_list','main.py',166),
  ('EXPR -> isvoid EXPR','EXPR',2,'p_expr_doubles','main.py',170),
  ('EXPR -> tilde EXPR','EXPR',2,'p_expr_doubles','main.py',171),
  ('EXPR -> not EXPR','EXPR',2,'p_expr_doubles','main.py',172),
  ('EXPR -> EXPR plus EXPR','EXPR',3,'p_expr_math','main.py',176),
  ('EXPR -> EXPR minus EXPR','EXPR',3,'p_expr_math','main.py',177),
  ('EXPR -> EXPR times EXPR','EXPR',3,'p_expr_math','main.py',178),
  ('EXPR -> EXPR divide EXPR','EXPR',3,'p_expr_math','main.py',179),
  ('EXPR -> EXPR lt EXPR','EXPR',3,'p_expr_math','main.py',180),
  ('EXPR -> EXPR le EXPR','EXPR',3,'p_expr_math','main.py',181),
  ('EXPR -> EXPR equals EXPR','EXPR',3,'p_expr_math','main.py',182),
  ('EXPR -> identifier','EXPR',1,'p_expr_terminal','main.py',189),
  ('EXPR -> integer','EXPR',1,'p_expr_terminal','main.py',190),
  ('EXPR -> string','EXPR',1,'p_expr_terminal','main.py',191),
  ('EXPR -> true','EXPR',1,'p_expr_terminal','main.py',192),
  ('EXPR -> false','EXPR',1,'p_expr_terminal','main.py',193),
  ('EXPR -> identifier lparen rparen','EXPR',3,'p_expr_terminal','main.py',194),
  ('EXPR -> new type','EXPR',2,'p_expr_terminal','main.py',195),
]
