
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb9\xf5\xc0\xf7N\x01\x97D\x02\xed\xbd\xc7Tp\x03T'
    
_lr_action_items = {'inherits':([6,],[8,]),'fi':([38,41,44,49,53,58,63,66,73,76,77,87,88,89,90,91,92,94,95,97,99,103,105,110,111,117,119,125,129,132,134,136,142,144,148,151,159,],[-54,-51,-52,-53,-50,-41,-34,-35,-40,-56,-42,-48,-46,-39,-49,-37,-47,-43,-44,-45,-26,-28,-55,-35,-34,-27,-29,-31,-16,-33,142,-20,-32,-30,-21,-19,-22,]),'false':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'rbrace':([9,15,16,30,38,41,44,49,53,58,63,66,73,76,77,87,88,89,90,91,92,94,95,97,99,101,103,105,106,110,111,117,119,121,125,129,132,136,142,144,148,151,159,],[11,20,22,37,-54,-51,-52,-53,-50,-41,-34,-35,-40,-56,-42,-48,-46,-39,-49,-37,-47,-43,-44,-45,-26,117,-28,-55,120,-35,-34,-27,-29,133,-31,-16,-33,-20,-32,-30,-21,-19,-22,]),'in':([38,41,44,49,53,58,63,66,73,76,77,87,88,89,90,91,92,94,95,97,99,103,105,110,111,114,117,119,125,128,129,132,136,138,142,144,147,148,151,152,153,158,159,162,164,],[-54,-51,-52,-53,-50,-41,-34,-35,-40,-56,-42,-48,-46,-39,-49,-37,-47,-43,-44,-45,-26,-28,-55,-35,-34,-25,-27,-29,-31,139,-16,-33,-20,-25,-32,-30,154,-21,-19,-25,-50,-23,-22,-25,-24,]),'colon':([14,27,28,35,57,74,116,130,137,153,],[18,33,34,56,85,98,131,140,145,145,]),'at':([38,41,42,44,49,53,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,94,95,97,99,103,104,105,106,109,110,111,117,118,119,121,124,125,129,132,134,136,138,142,143,144,148,151,153,156,159,160,162,],[-54,-51,68,-52,-53,-50,68,68,-34,-35,68,68,-56,68,68,68,68,68,68,68,68,68,68,68,68,68,-26,68,68,-55,68,68,-35,-34,-27,68,-29,68,68,-31,-16,-33,68,-20,68,-32,68,-30,68,-19,-50,68,68,68,68,]),'tilde':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'if':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'le':([38,41,42,44,49,53,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,94,95,97,99,103,104,105,106,109,110,111,117,118,119,121,124,125,129,132,134,136,138,142,143,144,148,151,153,156,159,160,162,],[-54,-51,60,-52,-53,-50,-41,60,-34,-35,-40,60,-56,60,60,60,60,-48,-46,60,-49,60,-47,-43,-44,-45,-26,60,60,-55,60,60,-35,-34,-27,60,-29,60,60,-31,-16,-33,60,-20,60,-32,60,-30,60,-19,-50,60,60,60,60,]),'divide':([38,41,42,44,49,53,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,94,95,97,99,103,104,105,106,109,110,111,117,118,119,121,124,125,129,132,134,136,138,142,143,144,148,151,153,156,159,160,162,],[-54,-51,61,-52,-53,-50,-41,61,-34,-35,-40,61,-56,61,61,61,61,61,-46,61,61,61,61,61,61,-45,-26,61,61,-55,61,61,-35,-34,-27,61,-29,61,61,-31,-16,-33,61,-20,61,-32,61,-30,61,-19,-50,61,61,61,61,]),'rarrow':([141,149,],[150,155,]),'isvoid':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'larrow':([26,53,114,152,153,],[32,81,127,157,81,]),'lt':([38,41,42,44,49,53,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,94,95,97,99,103,104,105,106,109,110,111,117,118,119,121,124,125,129,132,134,136,138,142,143,144,148,151,153,156,159,160,162,],[-54,-51,67,-52,-53,-50,-41,67,-34,-35,-40,67,-56,67,67,67,67,-48,-46,67,-49,67,-47,-43,-44,-45,-26,67,67,-55,67,67,-35,-34,-27,67,-29,67,67,-31,-16,-33,67,-20,67,-32,67,-30,67,-19,-50,67,67,67,67,]),'esac':([115,161,163,],[129,-17,-18,]),'new':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'type':([3,8,18,33,34,47,56,68,85,98,131,140,145,],[6,10,26,54,55,76,84,93,108,114,141,149,152,]),'$end':([2,4,7,],[0,-1,-2,]),'then':([38,41,44,49,53,58,59,63,66,73,76,77,87,88,89,90,91,92,94,95,97,99,103,105,110,111,117,119,125,129,132,136,142,144,148,151,159,],[-54,-51,-52,-53,-50,-41,86,-34,-35,-40,-56,-42,-48,-46,-39,-49,-37,-47,-43,-44,-45,-26,-28,-55,-35,-34,-27,-29,-31,-16,-33,-20,-32,-30,-21,-19,-22,]),'string':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'equals':([38,41,42,44,49,53,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,94,95,97,99,103,104,105,106,109,110,111,117,118,119,121,124,125,129,132,134,136,138,142,143,144,148,151,153,156,159,160,162,],[-54,-51,64,-52,-53,-50,-41,64,-34,-35,-40,64,-56,64,64,64,64,-48,-46,64,-49,64,-47,-43,-44,-45,-26,64,64,-55,64,64,-35,-34,-27,64,-29,64,64,-31,-16,-33,64,-20,64,-32,64,-30,64,-19,-50,64,64,64,64,]),'else':([38,41,44,49,53,58,63,66,73,76,77,87,88,89,90,91,92,94,95,97,99,103,105,109,110,111,117,119,125,129,132,136,142,144,148,151,159,],[-54,-51,-52,-53,-50,-41,-34,-35,-40,-56,-42,-48,-46,-39,-49,-37,-47,-43,-44,-45,-26,-28,-55,122,-35,-34,-27,-29,-31,-16,-33,-20,-32,-30,-21,-19,-22,]),'let':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'lparen':([14,32,39,40,43,46,48,50,51,52,53,60,61,62,64,65,67,69,70,72,81,82,83,86,96,101,102,107,113,122,123,127,135,139,146,150,153,154,155,157,161,163,],[19,46,46,46,46,46,46,46,46,46,82,46,46,46,46,46,46,46,46,46,46,46,46,46,113,46,46,46,46,46,135,46,46,46,46,46,82,46,46,46,46,46,]),'not':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'integer':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'true':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'class':([0,2,4,7,],[3,3,-1,-2,]),'pool':([38,41,44,49,53,58,63,66,73,76,77,87,88,89,90,91,92,94,95,97,99,103,105,110,111,117,118,119,125,129,132,136,142,144,148,151,159,],[-54,-51,-52,-53,-50,-41,-34,-35,-40,-56,-42,-48,-46,-39,-49,-37,-47,-43,-44,-45,-26,-28,-55,-35,-34,-27,132,-29,-31,-16,-33,-20,-32,-30,-21,-19,-22,]),'case':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'lbrace':([6,10,32,39,40,43,46,48,50,51,52,54,60,61,62,64,65,67,69,70,72,81,82,83,84,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[9,15,51,51,51,51,51,51,51,51,51,83,51,51,51,51,51,51,51,51,51,51,51,51,107,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'rparen':([19,29,38,41,44,49,53,55,58,63,66,73,75,76,77,82,87,88,89,90,91,92,94,95,97,99,103,104,105,108,110,111,113,117,119,124,125,129,132,135,136,142,143,144,148,151,159,],[27,35,-54,-51,-52,-53,-50,-14,-41,-34,-35,-40,99,-56,-42,105,-48,-46,-39,-49,-37,-47,-43,-44,-45,-26,-28,119,-55,-15,-35,-34,125,-27,-29,136,-31,-16,-33,144,-20,-32,151,-30,-21,-19,-22,]),'semi':([1,5,9,11,12,13,15,16,17,20,21,22,23,24,25,26,30,31,37,38,41,42,44,49,53,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,94,95,97,99,103,104,105,106,109,110,111,117,118,119,120,121,124,125,129,132,133,134,136,138,142,143,144,148,151,153,156,159,160,162,],[4,7,-13,-3,16,17,-13,-13,-13,-5,30,-4,31,17,31,-9,-13,-13,-6,-54,-51,-10,-52,-53,-50,-41,62,-34,-35,-40,62,-56,-42,62,101,62,-48,-46,62,-49,62,-47,-43,-44,-45,-26,-28,62,-55,62,62,-35,-34,-27,62,-29,-8,62,62,-31,-16,-33,-7,62,-20,62,-32,62,-30,62,-19,-50,161,62,163,62,]),'of':([38,41,44,49,53,58,63,66,73,76,77,78,87,88,89,90,91,92,94,95,97,99,103,105,110,111,117,119,125,129,132,136,142,144,148,151,159,],[-54,-51,-52,-53,-50,-41,-34,-35,-40,-56,-42,100,-48,-46,-39,-49,-37,-47,-43,-44,-45,-26,-28,-55,-35,-34,-27,-29,-31,-16,-33,-20,-32,-30,-21,-19,-22,]),'times':([38,41,42,44,49,53,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,94,95,97,99,103,104,105,106,109,110,111,117,118,119,121,124,125,129,132,134,136,138,142,143,144,148,151,153,156,159,160,162,],[-54,-51,72,-52,-53,-50,-41,72,-34,-35,-40,72,-56,72,72,72,72,72,-46,72,72,72,72,72,72,-45,-26,72,72,-55,72,72,-35,-34,-27,72,-29,72,72,-31,-16,-33,72,-20,72,-32,72,-30,72,-19,-50,72,72,72,72,]),'while':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'plus':([38,41,42,44,49,53,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,94,95,97,99,103,104,105,106,109,110,111,117,118,119,121,124,125,129,132,134,136,138,142,143,144,148,151,153,156,159,160,162,],[-54,-51,69,-52,-53,-50,-41,69,-34,-35,-40,69,-56,69,69,69,69,69,-46,69,69,69,69,-43,-44,-45,-26,69,69,-55,69,69,-35,-34,-27,69,-29,69,69,-31,-16,-33,69,-20,69,-32,69,-30,69,-19,-50,69,69,69,69,]),'dot':([38,41,42,44,49,53,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,93,94,95,97,99,103,104,105,106,109,110,111,117,118,119,121,124,125,129,132,134,136,138,142,143,144,148,151,153,156,159,160,162,],[-54,-51,71,-52,-53,-50,71,71,-34,-35,71,71,-56,71,71,71,71,71,71,71,71,71,71,112,71,71,71,-26,71,71,-55,71,71,-35,-34,-27,71,-29,71,71,-31,-16,-33,71,-20,71,-32,71,-30,71,-19,-50,71,71,71,71,]),'comma':([29,38,41,42,44,49,53,55,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,94,95,97,99,103,104,105,106,108,109,110,111,114,117,118,119,121,124,125,129,132,134,136,138,142,143,144,148,151,152,153,156,159,160,162,],[36,-54,-51,65,-52,-53,-50,-14,-41,65,-34,-35,-40,65,-56,-42,65,65,65,-48,-46,65,-49,65,-47,-43,-44,-45,-26,-28,65,-55,65,-15,65,-35,-34,126,-27,65,-29,65,65,-31,-16,-33,65,-20,146,-32,65,-30,65,-19,126,-50,65,65,65,146,]),'identifier':([9,15,16,17,19,30,31,32,36,39,40,43,45,46,48,50,51,52,60,61,62,64,65,67,69,70,71,72,81,82,83,86,100,101,102,107,112,113,115,122,126,127,135,139,146,150,154,155,157,161,163,],[14,14,14,14,28,14,14,53,57,53,53,53,74,53,53,53,53,53,53,53,53,53,53,53,53,53,96,53,53,53,53,53,116,53,53,53,123,53,130,53,137,53,53,53,153,53,53,53,53,53,53,]),'minus':([38,41,42,44,49,53,58,59,63,66,73,75,76,77,78,79,80,87,88,89,90,91,92,94,95,97,99,103,104,105,106,109,110,111,117,118,119,121,124,125,129,132,134,136,138,142,143,144,148,151,153,156,159,160,162,],[-54,-51,70,-52,-53,-50,-41,70,-34,-35,-40,70,-56,70,70,70,70,70,-46,70,70,70,70,-43,-44,-45,-26,70,70,-55,70,70,-35,-34,-27,70,-29,70,70,-31,-16,-33,70,-20,70,-32,70,-30,70,-19,-50,70,70,70,70,]),'loop':([38,41,44,49,53,58,63,66,73,76,77,80,87,88,89,90,91,92,94,95,97,99,103,105,110,111,117,119,125,129,132,136,142,144,148,151,159,],[-54,-51,-52,-53,-50,-41,-34,-35,-40,-56,-42,102,-48,-46,-39,-49,-37,-47,-43,-44,-45,-26,-28,-55,-35,-34,-27,-29,-31,-16,-33,-20,-32,-30,-21,-19,-22,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'LETHELPER':([114,138,152,162,],[128,147,158,164,]),'EXPRLISTCOMMA':([42,58,59,73,75,77,78,79,80,87,88,89,90,91,92,94,95,97,103,104,106,109,118,121,124,134,138,143,148,156,159,160,162,],[63,63,63,63,63,63,63,63,63,63,63,63,63,111,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'EXPR':([32,39,40,43,46,48,50,51,52,60,61,62,64,65,67,69,70,72,81,82,83,86,101,102,107,113,122,127,135,139,146,150,154,155,157,161,163,],[42,58,59,73,75,77,78,79,80,87,88,89,90,91,92,94,95,97,103,104,106,109,89,118,121,124,134,138,143,148,91,156,159,160,162,89,89,]),'CLASSDEF':([0,2,],[1,5,]),'FEATURE':([9,15,16,17,30,31,],[12,21,23,25,23,23,]),'PROGRAM':([0,],[2,]),'FEATURELIST':([9,15,16,17,30,31,],[13,13,24,13,24,24,]),'CASEHELPER':([100,],[115,]),'EXPRLISTSEMI':([42,58,59,73,75,77,78,79,80,87,88,89,90,91,92,94,95,97,103,104,106,109,118,121,124,134,138,143,148,156,159,160,162,],[66,66,66,66,66,66,66,66,66,66,66,110,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FORMAL':([19,],[29,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> CLASSDEF semi','PROGRAM',2,'p_program_one','main.py',45),
  ('PROGRAM -> PROGRAM CLASSDEF semi','PROGRAM',3,'p_program_many','main.py',48),
  ('CLASSDEF -> class type lbrace rbrace','CLASSDEF',4,'p_class_def','main.py',52),
  ('CLASSDEF -> class type lbrace FEATURE semi rbrace','CLASSDEF',6,'p_class_def','main.py',53),
  ('CLASSDEF -> class type inherits type lbrace rbrace','CLASSDEF',6,'p_class_def_inherits','main.py',60),
  ('CLASSDEF -> class type inherits type lbrace FEATURE semi rbrace','CLASSDEF',8,'p_class_def_inherits','main.py',61),
  ('FEATURE -> identifier lparen FORMAL rparen colon type lbrace EXPR rbrace','FEATURE',9,'p_feature','main.py',68),
  ('FEATURE -> identifier lparen rparen colon type lbrace EXPR rbrace','FEATURE',8,'p_feature','main.py',69),
  ('FEATURE -> identifier colon type','FEATURE',3,'p_feature','main.py',70),
  ('FEATURE -> identifier colon type larrow EXPR','FEATURE',5,'p_feature','main.py',71),
  ('FEATURE -> FEATURELIST semi FEATURE','FEATURE',3,'p_feature_helper','main.py',82),
  ('FEATURELIST -> FEATURE semi FEATURELIST','FEATURELIST',3,'p_feature_list','main.py',86),
  ('FEATURELIST -> <empty>','FEATURELIST',0,'p_feature_list','main.py',87),
  ('FORMAL -> identifier colon type','FORMAL',3,'p_formal','main.py',95),
  ('FORMAL -> FORMAL comma identifier colon type','FORMAL',5,'p_formal','main.py',96),
  ('EXPR -> case EXPR of CASEHELPER esac','EXPR',5,'p_expr_case','main.py',107),
  ('CASEHELPER -> identifier colon type rarrow EXPR semi','CASEHELPER',6,'p_case_helper','main.py',111),
  ('CASEHELPER -> CASEHELPER identifier colon type rarrow EXPR semi','CASEHELPER',7,'p_case_helper','main.py',112),
  ('EXPR -> EXPR at type dot identifier lparen EXPR rparen','EXPR',8,'p_expr_at_dot','main.py',120),
  ('EXPR -> EXPR dot identifier lparen EXPR rparen','EXPR',6,'p_expr_at_dot','main.py',121),
  ('EXPR -> let identifier colon type LETHELPER in EXPR','EXPR',7,'p_expr_let','main.py',130),
  ('EXPR -> let identifier colon type larrow EXPR LETHELPER in EXPR','EXPR',9,'p_expr_let','main.py',131),
  ('LETHELPER -> comma identifier colon type LETHELPER','LETHELPER',5,'p_let_helper','main.py',139),
  ('LETHELPER -> comma identifier colon type larrow EXPR LETHELPER','LETHELPER',7,'p_let_helper','main.py',140),
  ('LETHELPER -> <empty>','LETHELPER',0,'p_let_helper','main.py',141),
  ('EXPR -> lparen EXPR rparen','EXPR',3,'p_expr_seconds','main.py',150),
  ('EXPR -> lbrace EXPR semi rbrace','EXPR',4,'p_expr_seconds','main.py',151),
  ('EXPR -> identifier larrow EXPR','EXPR',3,'p_expr_thirds','main.py',156),
  ('EXPR -> identifier lparen EXPR rparen','EXPR',4,'p_expr_thirds','main.py',157),
  ('EXPR -> EXPR at type dot identifier lparen rparen','EXPR',7,'p_expr_firsts','main.py',162),
  ('EXPR -> EXPR dot identifier lparen rparen','EXPR',5,'p_expr_firsts','main.py',163),
  ('EXPR -> if EXPR then EXPR else EXPR fi','EXPR',7,'p_expr_conditionals','main.py',167),
  ('EXPR -> while EXPR loop EXPR pool','EXPR',5,'p_expr_conditionals','main.py',168),
  ('EXPR -> EXPR EXPRLISTCOMMA','EXPR',2,'p_expr_list','main.py',176),
  ('EXPR -> EXPR EXPRLISTSEMI','EXPR',2,'p_expr_list','main.py',177),
  ('EXPRLISTCOMMA -> comma EXPR EXPRLISTCOMMA','EXPRLISTCOMMA',3,'p_expr_list_comma','main.py',181),
  ('EXPRLISTCOMMA -> comma EXPR','EXPRLISTCOMMA',2,'p_expr_list_comma','main.py',182),
  ('EXPRLISTSEMI -> semi EXPR EXPRLISTSEMI','EXPRLISTSEMI',3,'p_expr_list_semi','main.py',189),
  ('EXPRLISTSEMI -> semi EXPR','EXPRLISTSEMI',2,'p_expr_list_semi','main.py',190),
  ('EXPR -> isvoid EXPR','EXPR',2,'p_expr_doubles','main.py',198),
  ('EXPR -> tilde EXPR','EXPR',2,'p_expr_doubles','main.py',199),
  ('EXPR -> not EXPR','EXPR',2,'p_expr_doubles','main.py',200),
  ('EXPR -> EXPR plus EXPR','EXPR',3,'p_expr_math','main.py',204),
  ('EXPR -> EXPR minus EXPR','EXPR',3,'p_expr_math','main.py',205),
  ('EXPR -> EXPR times EXPR','EXPR',3,'p_expr_math','main.py',206),
  ('EXPR -> EXPR divide EXPR','EXPR',3,'p_expr_math','main.py',207),
  ('EXPR -> EXPR lt EXPR','EXPR',3,'p_expr_math','main.py',208),
  ('EXPR -> EXPR le EXPR','EXPR',3,'p_expr_math','main.py',209),
  ('EXPR -> EXPR equals EXPR','EXPR',3,'p_expr_math','main.py',210),
  ('EXPR -> identifier','EXPR',1,'p_expr_terminal','main.py',217),
  ('EXPR -> integer','EXPR',1,'p_expr_terminal','main.py',218),
  ('EXPR -> string','EXPR',1,'p_expr_terminal','main.py',219),
  ('EXPR -> true','EXPR',1,'p_expr_terminal','main.py',220),
  ('EXPR -> false','EXPR',1,'p_expr_terminal','main.py',221),
  ('EXPR -> identifier lparen rparen','EXPR',3,'p_expr_terminal','main.py',222),
  ('EXPR -> new type','EXPR',2,'p_expr_terminal','main.py',223),
]
