
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "\xa1F_\xbb&\x9c\x93Z\x80'\x14b\xce\xd5\x1e\xfd"
    
_lr_action_items = {'inherits':([6,],[8,]),'fi':([29,32,36,40,44,48,61,62,65,74,75,76,77,78,79,80,82,83,86,90,92,100,102,107,111,113,115,117,119,121,124,125,128,],[-44,-41,-42,-43,-40,-30,-29,-28,-31,-33,-36,-27,-39,-35,-37,-38,-26,-34,-18,-20,-32,-19,-21,-23,-25,119,-15,-16,-24,-22,-14,-17,-13,]),'false':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'rbrace':([9,14,15,19,21,29,32,33,36,40,44,48,61,62,65,74,75,76,77,78,79,80,82,83,86,88,90,92,100,102,103,107,111,112,115,117,119,121,124,125,128,],[11,18,20,24,-8,-44,-41,-9,-42,-43,-40,-30,-29,-28,-31,-33,-36,-27,-39,-35,-37,-38,-26,-34,-18,100,-20,-32,-19,-21,112,-23,-25,-7,-15,-16,-24,-22,-14,-17,-13,]),'in':([29,32,36,40,44,48,61,62,65,74,75,76,77,78,79,80,82,83,86,90,92,98,100,102,107,111,115,116,117,119,121,124,125,128,],[-44,-41,-42,-43,-40,-30,-29,-28,-31,-33,-36,-27,-39,-35,-37,-38,-26,-34,-18,-20,-32,109,-19,-21,-23,-25,-15,122,-16,-24,-22,-14,-17,-13,]),'colon':([13,22,27,47,63,99,],[16,26,46,72,85,110,]),'at':([29,32,33,36,40,44,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,82,83,86,90,91,92,95,100,101,102,103,106,107,111,113,115,116,117,119,120,121,124,125,126,128,],[-44,-41,57,-42,-43,-40,57,57,57,-28,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-18,57,57,-32,57,-19,57,-21,57,57,-23,-25,57,-15,57,57,-24,57,-22,-14,57,57,-13,]),'tilde':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'if':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'le':([29,32,33,36,40,44,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,82,83,86,90,91,92,95,100,101,102,103,106,107,111,113,115,116,117,119,120,121,124,125,126,128,],[-44,-41,56,-42,-43,-40,-30,56,-29,-28,56,56,56,56,56,-33,-36,56,None,-35,None,None,56,-34,-18,56,56,-32,56,-19,56,-21,56,56,-23,-25,56,-15,56,56,-24,56,-22,-14,56,56,-13,]),'divide':([29,32,33,36,40,44,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,82,83,86,90,91,92,95,100,101,102,103,106,107,111,113,115,116,117,119,120,121,124,125,126,128,],[-44,-41,51,-42,-43,-40,-30,51,-29,-28,51,51,51,51,51,51,-36,51,51,-35,51,51,51,51,-18,51,51,-32,51,-19,51,-21,51,51,-23,-25,51,-15,51,51,-24,51,-22,-14,51,51,-13,]),'rarrow':([118,],[123,]),'isvoid':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'larrow':([21,44,98,],[25,69,108,]),'lt':([29,32,33,36,40,44,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,82,83,86,90,91,92,95,100,101,102,103,106,107,111,113,115,116,117,119,120,121,124,125,126,128,],[-44,-41,55,-42,-43,-40,-30,55,-29,-28,55,55,55,55,55,-33,-36,55,None,-35,None,None,55,-34,-18,55,55,-32,55,-19,55,-21,55,55,-23,-25,55,-15,55,55,-24,55,-22,-14,55,55,-13,]),'esac':([127,],[128,]),'new':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'type':([3,8,16,26,35,46,57,72,85,110,],[6,10,21,45,62,71,81,94,98,118,]),'$end':([2,4,7,],[0,-1,-2,]),'then':([29,32,36,40,44,48,49,61,62,65,74,75,76,77,78,79,80,82,83,86,90,92,100,102,107,111,115,117,119,121,124,125,128,],[-44,-41,-42,-43,-40,-30,73,-29,-28,-31,-33,-36,-27,-39,-35,-37,-38,-26,-34,-18,-20,-32,-19,-21,-23,-25,-15,-16,-24,-22,-14,-17,-13,]),'string':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'equals':([29,32,33,36,40,44,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,82,83,86,90,91,92,95,100,101,102,103,106,107,111,113,115,116,117,119,120,121,124,125,126,128,],[-44,-41,53,-42,-43,-40,-30,53,-29,-28,53,53,53,53,53,-33,-36,53,None,-35,None,None,53,-34,-18,53,53,-32,53,-19,53,-21,53,53,-23,-25,53,-15,53,53,-24,53,-22,-14,53,53,-13,]),'else':([29,32,36,40,44,48,61,62,65,74,75,76,77,78,79,80,82,83,86,90,92,95,100,102,107,111,115,117,119,121,124,125,128,],[-44,-41,-42,-43,-40,-30,-29,-28,-31,-33,-36,-27,-39,-35,-37,-38,-26,-34,-18,-20,-32,104,-19,-21,-23,-25,-15,-16,-24,-22,-14,-17,-13,]),'let':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'lparen':([13,25,30,31,34,38,39,41,42,43,44,50,51,52,53,54,55,56,58,59,69,70,73,84,88,89,93,97,104,105,108,109,114,122,123,127,],[17,38,38,38,38,38,38,38,38,38,70,38,38,38,38,38,38,38,38,38,38,38,38,97,38,38,38,38,38,114,38,38,38,38,38,38,]),'not':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'integer':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'true':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'class':([0,2,4,7,],[3,3,-1,-2,]),'pool':([29,32,36,40,44,48,61,62,65,74,75,76,77,78,79,80,82,83,86,90,92,100,101,102,107,111,115,117,119,121,124,125,128,],[-44,-41,-42,-43,-40,-30,-29,-28,-31,-33,-36,-27,-39,-35,-37,-38,-26,-34,-18,-20,-32,-19,111,-21,-23,-25,-15,-16,-24,-22,-14,-17,-13,]),'case':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'lbrace':([6,10,25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,71,73,88,89,93,97,104,108,109,114,122,123,127,],[9,14,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,93,42,42,42,42,42,42,42,42,42,42,42,42,]),'rparen':([17,23,29,32,36,40,44,45,48,61,62,64,65,70,74,75,76,77,78,79,80,82,83,86,90,91,92,94,97,100,102,106,107,111,114,115,117,119,120,121,124,125,128,],[-12,27,-44,-41,-42,-43,-40,-10,-30,-29,-28,86,-31,92,-33,-36,-27,-39,-35,-37,-38,-26,-34,-18,-20,102,-32,-11,107,-19,-21,115,-23,-25,121,-15,-16,-24,124,-22,-14,-17,-13,]),'semi':([1,5,11,12,18,20,21,24,29,32,33,36,40,44,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,82,83,86,90,91,92,95,100,101,102,103,106,107,111,112,113,115,116,117,119,120,121,124,125,126,128,],[4,7,-3,15,-5,-4,-8,-6,-44,-41,-9,-42,-43,-40,-30,52,-29,-28,52,-31,52,88,52,-33,-36,52,-39,-35,-37,-38,52,-34,-18,-20,52,-32,52,-19,52,-21,52,52,-23,-25,-7,52,-15,52,52,-24,52,-22,-14,52,127,-13,]),'of':([29,32,36,40,44,48,61,62,65,66,74,75,76,77,78,79,80,82,83,86,90,92,100,102,107,111,115,117,119,121,124,125,128,],[-44,-41,-42,-43,-40,-30,-29,-28,-31,87,-33,-36,-27,-39,-35,-37,-38,-26,-34,-18,-20,-32,-19,-21,-23,-25,-15,-16,-24,-22,-14,-17,-13,]),'times':([29,32,33,36,40,44,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,82,83,86,90,91,92,95,100,101,102,103,106,107,111,113,115,116,117,119,120,121,124,125,126,128,],[-44,-41,54,-42,-43,-40,-30,54,-29,-28,54,54,54,54,54,54,-36,54,54,-35,54,54,54,54,-18,54,54,-32,54,-19,54,-21,54,54,-23,-25,54,-15,54,54,-24,54,-22,-14,54,54,-13,]),'while':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'plus':([29,32,33,36,40,44,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,82,83,86,90,91,92,95,100,101,102,103,106,107,111,113,115,116,117,119,120,121,124,125,126,128,],[-44,-41,50,-42,-43,-40,-30,50,-29,-28,50,50,50,50,50,-33,-36,50,50,-35,50,50,50,-34,-18,50,50,-32,50,-19,50,-21,50,50,-23,-25,50,-15,50,50,-24,50,-22,-14,50,50,-13,]),'dot':([29,32,33,36,40,44,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,81,82,83,86,90,91,92,95,100,101,102,103,106,107,111,113,115,116,117,119,120,121,124,125,126,128,],[-44,-41,60,-42,-43,-40,60,60,60,-28,60,60,60,60,60,60,60,60,60,60,60,60,96,60,60,-18,60,60,-32,60,-19,60,-21,60,60,-23,-25,60,-15,60,60,-24,60,-22,-14,60,60,-13,]),'comma':([17,23,29,32,33,36,40,44,45,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,82,83,86,90,91,92,94,95,100,101,102,103,106,107,111,113,115,116,117,119,120,121,124,125,126,128,],[-12,28,-44,-41,58,-42,-43,-40,-10,-30,58,-29,-28,58,-31,58,58,58,-33,-36,58,-39,-35,-37,-38,58,-34,-18,-20,58,-32,-11,58,-19,58,-21,58,58,-23,-25,58,-15,58,58,-24,58,-22,-14,58,58,-13,]),'identifier':([9,14,17,25,28,30,31,34,37,38,39,41,42,43,50,51,52,53,54,55,56,58,59,60,69,70,73,87,88,89,93,96,97,104,108,109,114,122,123,127,],[13,13,22,44,47,44,44,44,63,44,44,44,44,44,44,44,44,44,44,44,44,44,44,84,44,44,44,99,44,44,44,105,44,44,44,44,44,44,44,44,]),'minus':([29,32,33,36,40,44,48,49,61,62,64,65,66,67,68,74,75,76,77,78,79,80,82,83,86,90,91,92,95,100,101,102,103,106,107,111,113,115,116,117,119,120,121,124,125,126,128,],[-44,-41,59,-42,-43,-40,-30,59,-29,-28,59,59,59,59,59,-33,-36,59,59,-35,59,59,59,-34,-18,59,59,-32,59,-19,59,-21,59,59,-23,-25,59,-15,59,59,-24,59,-22,-14,59,59,-13,]),'loop':([29,32,36,40,44,48,61,62,65,68,74,75,76,77,78,79,80,82,83,86,90,92,100,102,107,111,115,117,119,121,124,125,128,],[-44,-41,-42,-43,-40,-30,-29,-28,-31,89,-33,-36,-27,-39,-35,-37,-38,-26,-34,-18,-20,-32,-19,-21,-23,-25,-15,-16,-24,-22,-14,-17,-13,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FORMAL':([17,],[23,]),'EXPR':([25,30,31,34,38,39,41,42,43,50,51,52,53,54,55,56,58,59,69,70,73,88,89,93,97,104,108,109,114,122,123,127,],[33,48,49,61,64,65,66,67,68,74,75,76,77,78,79,80,82,83,90,91,95,76,101,103,106,113,116,117,120,125,126,76,]),'PROGRAM':([0,],[2,]),'CLASSDEF':([0,2,],[1,5,]),'FEATURE':([9,14,],[12,19,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> CLASSDEF semi','PROGRAM',2,'p_program_one','main.py',43),
  ('PROGRAM -> PROGRAM CLASSDEF semi','PROGRAM',3,'p_program_many','main.py',46),
  ('CLASSDEF -> class type lbrace rbrace','CLASSDEF',4,'p_class_def','main.py',50),
  ('CLASSDEF -> class type lbrace FEATURE semi rbrace','CLASSDEF',6,'p_class_def','main.py',51),
  ('CLASSDEF -> class type inherits type lbrace rbrace','CLASSDEF',6,'p_class_def_inherits','main.py',58),
  ('CLASSDEF -> class type inherits type lbrace FEATURE rbrace','CLASSDEF',7,'p_class_def_inherits','main.py',59),
  ('FEATURE -> identifier lparen FORMAL rparen colon type lbrace EXPR rbrace','FEATURE',9,'p_feature','main.py',66),
  ('FEATURE -> identifier colon type','FEATURE',3,'p_feature','main.py',67),
  ('FEATURE -> identifier colon type larrow EXPR','FEATURE',5,'p_feature','main.py',68),
  ('FORMAL -> identifier colon type','FORMAL',3,'p_formal','main.py',77),
  ('FORMAL -> FORMAL comma identifier colon type','FORMAL',5,'p_formal','main.py',78),
  ('FORMAL -> <empty>','FORMAL',0,'p_formal','main.py',79),
  ('EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac','EXPR',10,'p_expr_case','main.py',88),
  ('EXPR -> EXPR at type dot identifier lparen EXPR rparen','EXPR',8,'p_expr_at_dot','main.py',92),
  ('EXPR -> EXPR dot identifier lparen EXPR rparen','EXPR',6,'p_expr_at_dot','main.py',93),
  ('EXPR -> let identifier colon type in EXPR','EXPR',6,'p_expr_let','main.py',101),
  ('EXPR -> let identifier colon type larrow EXPR in EXPR','EXPR',8,'p_expr_let','main.py',102),
  ('EXPR -> lparen EXPR rparen','EXPR',3,'p_expr_seconds','main.py',110),
  ('EXPR -> lbrace EXPR semi rbrace','EXPR',4,'p_expr_seconds','main.py',111),
  ('EXPR -> identifier larrow EXPR','EXPR',3,'p_expr_thirds','main.py',116),
  ('EXPR -> identifier lparen EXPR rparen','EXPR',4,'p_expr_thirds','main.py',117),
  ('EXPR -> EXPR at type dot identifier lparen rparen','EXPR',7,'p_expr_firsts','main.py',122),
  ('EXPR -> EXPR dot identifier lparen rparen','EXPR',5,'p_expr_firsts','main.py',123),
  ('EXPR -> if EXPR then EXPR else EXPR fi','EXPR',7,'p_expr_conditionals','main.py',127),
  ('EXPR -> while EXPR loop EXPR pool','EXPR',5,'p_expr_conditionals','main.py',128),
  ('EXPR -> EXPR comma EXPR','EXPR',3,'p_expr_list','main.py',136),
  ('EXPR -> EXPR semi EXPR','EXPR',3,'p_expr_list','main.py',137),
  ('EXPR -> new type','EXPR',2,'p_expr_doubles','main.py',141),
  ('EXPR -> isvoid EXPR','EXPR',2,'p_expr_doubles','main.py',142),
  ('EXPR -> tilde EXPR','EXPR',2,'p_expr_doubles','main.py',143),
  ('EXPR -> not EXPR','EXPR',2,'p_expr_doubles','main.py',144),
  ('EXPR -> identifier lparen rparen','EXPR',3,'p_expr_doubles','main.py',145),
  ('EXPR -> EXPR plus EXPR','EXPR',3,'p_expr_math','main.py',151),
  ('EXPR -> EXPR minus EXPR','EXPR',3,'p_expr_math','main.py',152),
  ('EXPR -> EXPR times EXPR','EXPR',3,'p_expr_math','main.py',153),
  ('EXPR -> EXPR divide EXPR','EXPR',3,'p_expr_math','main.py',154),
  ('EXPR -> EXPR lt EXPR','EXPR',3,'p_expr_math','main.py',155),
  ('EXPR -> EXPR le EXPR','EXPR',3,'p_expr_math','main.py',156),
  ('EXPR -> EXPR equals EXPR','EXPR',3,'p_expr_math','main.py',157),
  ('EXPR -> identifier','EXPR',1,'p_expr_terminal','main.py',164),
  ('EXPR -> integer','EXPR',1,'p_expr_terminal','main.py',165),
  ('EXPR -> string','EXPR',1,'p_expr_terminal','main.py',166),
  ('EXPR -> true','EXPR',1,'p_expr_terminal','main.py',167),
  ('EXPR -> false','EXPR',1,'p_expr_terminal','main.py',168),
  ('empty -> <empty>','empty',0,'p_empty','main.py',185),
]
