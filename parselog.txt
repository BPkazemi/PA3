   yacc.py:3095:Created by PLY version 3.4 (http://www.dabeaz.com/ply)
   yacc.py:3159:
   yacc.py:3160:Grammar
   yacc.py:3161:
   yacc.py:3163:Rule 0     S' -> PROGRAM
   yacc.py:3163:Rule 1     PROGRAM -> CLASSDEF semi
   yacc.py:3163:Rule 2     PROGRAM -> PROGRAM CLASSDEF semi
   yacc.py:3163:Rule 3     CLASSDEF -> class type lbrace rbrace
   yacc.py:3163:Rule 4     CLASSDEF -> class type lbrace FEATURE semi rbrace
   yacc.py:3163:Rule 5     CLASSDEF -> class type inherits type lbrace rbrace
   yacc.py:3163:Rule 6     CLASSDEF -> class type inherits type lbrace FEATURE rbrace
   yacc.py:3163:Rule 7     FEATURE -> identifier lparen FORMAL rparen colon type lbrace EXPR rbrace
   yacc.py:3163:Rule 8     FEATURE -> identifier colon type
   yacc.py:3163:Rule 9     FEATURE -> identifier colon type larrow EXPR
   yacc.py:3163:Rule 10    FORMAL -> identifier colon type
   yacc.py:3163:Rule 11    FORMAL -> FORMAL comma identifier colon type
   yacc.py:3163:Rule 12    FORMAL -> <empty>
   yacc.py:3163:Rule 13    EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:3163:Rule 14    EXPR -> EXPR at type dot identifier lparen EXPR rparen
   yacc.py:3163:Rule 15    EXPR -> EXPR dot identifier lparen EXPR rparen
   yacc.py:3163:Rule 16    EXPR -> let identifier colon type in EXPR
   yacc.py:3163:Rule 17    EXPR -> let identifier colon type larrow EXPR in EXPR
   yacc.py:3163:Rule 18    EXPR -> lparen EXPR rparen
   yacc.py:3163:Rule 19    EXPR -> lbrace EXPR semi rbrace
   yacc.py:3163:Rule 20    EXPR -> identifier larrow EXPR
   yacc.py:3163:Rule 21    EXPR -> identifier lparen EXPR rparen
   yacc.py:3163:Rule 22    EXPR -> EXPR at type dot identifier lparen rparen
   yacc.py:3163:Rule 23    EXPR -> EXPR dot identifier lparen rparen
   yacc.py:3163:Rule 24    EXPR -> if EXPR then EXPR else EXPR fi
   yacc.py:3163:Rule 25    EXPR -> while EXPR loop EXPR pool
   yacc.py:3163:Rule 26    EXPR -> EXPR comma EXPR
   yacc.py:3163:Rule 27    EXPR -> EXPR semi EXPR
   yacc.py:3163:Rule 28    EXPR -> new type
   yacc.py:3163:Rule 29    EXPR -> isvoid EXPR
   yacc.py:3163:Rule 30    EXPR -> tilde EXPR
   yacc.py:3163:Rule 31    EXPR -> not EXPR
   yacc.py:3163:Rule 32    EXPR -> identifier lparen rparen
   yacc.py:3163:Rule 33    EXPR -> EXPR plus EXPR
   yacc.py:3163:Rule 34    EXPR -> EXPR minus EXPR
   yacc.py:3163:Rule 35    EXPR -> EXPR times EXPR
   yacc.py:3163:Rule 36    EXPR -> EXPR divide EXPR
   yacc.py:3163:Rule 37    EXPR -> EXPR lt EXPR
   yacc.py:3163:Rule 38    EXPR -> EXPR le EXPR
   yacc.py:3163:Rule 39    EXPR -> EXPR equals EXPR
   yacc.py:3163:Rule 40    EXPR -> identifier
   yacc.py:3163:Rule 41    EXPR -> integer
   yacc.py:3163:Rule 42    EXPR -> string
   yacc.py:3163:Rule 43    EXPR -> true
   yacc.py:3163:Rule 44    EXPR -> false
   yacc.py:3163:Rule 45    empty -> <empty>
   yacc.py:3181:
   yacc.py:3182:Terminals, with rules where they appear
   yacc.py:3183:
   yacc.py:3187:at                   : 14 22
   yacc.py:3187:case                 : 13
   yacc.py:3187:class                : 3 4 5 6
   yacc.py:3187:colon                : 7 8 9 10 11 13 16 17
   yacc.py:3187:comma                : 11 26
   yacc.py:3187:divide               : 36
   yacc.py:3187:dot                  : 14 15 22 23
   yacc.py:3187:else                 : 24
   yacc.py:3187:equals               : 39
   yacc.py:3187:error                : 
   yacc.py:3187:esac                 : 13
   yacc.py:3187:false                : 44
   yacc.py:3187:fi                   : 24
   yacc.py:3187:identifier           : 7 8 9 10 11 13 14 15 16 17 20 21 22 23 32 40
   yacc.py:3187:if                   : 24
   yacc.py:3187:in                   : 16 17
   yacc.py:3187:inherits             : 5 6
   yacc.py:3187:integer              : 41
   yacc.py:3187:isvoid               : 29
   yacc.py:3187:larrow               : 9 17 20
   yacc.py:3187:lbrace               : 3 4 5 6 7 19
   yacc.py:3187:le                   : 38
   yacc.py:3187:let                  : 16 17
   yacc.py:3187:loop                 : 25
   yacc.py:3187:lparen               : 7 14 15 18 21 22 23 32
   yacc.py:3187:lt                   : 37
   yacc.py:3187:minus                : 34
   yacc.py:3187:new                  : 28
   yacc.py:3187:not                  : 31
   yacc.py:3187:of                   : 13
   yacc.py:3187:plus                 : 33
   yacc.py:3187:pool                 : 25
   yacc.py:3187:rarrow               : 13
   yacc.py:3187:rbrace               : 3 4 5 6 7 19
   yacc.py:3187:rparen               : 7 14 15 18 21 22 23 32
   yacc.py:3187:semi                 : 1 2 4 13 19 27
   yacc.py:3187:string               : 42
   yacc.py:3187:then                 : 24
   yacc.py:3187:tilde                : 30
   yacc.py:3187:times                : 35
   yacc.py:3187:true                 : 43
   yacc.py:3187:type                 : 3 4 5 5 6 6 7 8 9 10 11 13 14 16 17 22 28
   yacc.py:3187:while                : 25
   yacc.py:3189:
   yacc.py:3190:Nonterminals, with rules where they appear
   yacc.py:3191:
   yacc.py:3195:CLASSDEF             : 1 2
   yacc.py:3195:EXPR                 : 7 9 13 13 14 14 15 15 16 17 17 18 19 20 21 22 23 24 24 24 25 25 26 26 27 27 29 30 31 33 33 34 34 35 35 36 36 37 37 38 38 39 39
   yacc.py:3195:FEATURE              : 4 6
   yacc.py:3195:FORMAL               : 7 11
   yacc.py:3195:PROGRAM              : 2 0
   yacc.py:3195:empty                : 
   yacc.py:3196:
   yacc.py:2371:Parsing method: LALR
   yacc.py:2389:
   yacc.py:2390:state 0
   yacc.py:2391:
   yacc.py:2393:    (0) S' -> . PROGRAM
   yacc.py:2393:    (1) PROGRAM -> . CLASSDEF semi
   yacc.py:2393:    (2) PROGRAM -> . PROGRAM CLASSDEF semi
   yacc.py:2393:    (3) CLASSDEF -> . class type lbrace rbrace
   yacc.py:2393:    (4) CLASSDEF -> . class type lbrace FEATURE semi rbrace
   yacc.py:2393:    (5) CLASSDEF -> . class type inherits type lbrace rbrace
   yacc.py:2393:    (6) CLASSDEF -> . class type inherits type lbrace FEATURE rbrace
   yacc.py:2394:
   yacc.py:2504:    class           shift and go to state 3
   yacc.py:2506:
   yacc.py:2531:    PROGRAM                        shift and go to state 2
   yacc.py:2531:    CLASSDEF                       shift and go to state 1
   yacc.py:2389:
   yacc.py:2390:state 1
   yacc.py:2391:
   yacc.py:2393:    (1) PROGRAM -> CLASSDEF . semi
   yacc.py:2394:
   yacc.py:2504:    semi            shift and go to state 4
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 2
   yacc.py:2391:
   yacc.py:2393:    (0) S' -> PROGRAM .
   yacc.py:2393:    (2) PROGRAM -> PROGRAM . CLASSDEF semi
   yacc.py:2393:    (3) CLASSDEF -> . class type lbrace rbrace
   yacc.py:2393:    (4) CLASSDEF -> . class type lbrace FEATURE semi rbrace
   yacc.py:2393:    (5) CLASSDEF -> . class type inherits type lbrace rbrace
   yacc.py:2393:    (6) CLASSDEF -> . class type inherits type lbrace FEATURE rbrace
   yacc.py:2394:
   yacc.py:2504:    class           shift and go to state 3
   yacc.py:2506:
   yacc.py:2531:    CLASSDEF                       shift and go to state 5
   yacc.py:2389:
   yacc.py:2390:state 3
   yacc.py:2391:
   yacc.py:2393:    (3) CLASSDEF -> class . type lbrace rbrace
   yacc.py:2393:    (4) CLASSDEF -> class . type lbrace FEATURE semi rbrace
   yacc.py:2393:    (5) CLASSDEF -> class . type inherits type lbrace rbrace
   yacc.py:2393:    (6) CLASSDEF -> class . type inherits type lbrace FEATURE rbrace
   yacc.py:2394:
   yacc.py:2504:    type            shift and go to state 6
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 4
   yacc.py:2391:
   yacc.py:2393:    (1) PROGRAM -> CLASSDEF semi .
   yacc.py:2394:
   yacc.py:2504:    class           reduce using rule 1 (PROGRAM -> CLASSDEF semi .)
   yacc.py:2504:    $end            reduce using rule 1 (PROGRAM -> CLASSDEF semi .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 5
   yacc.py:2391:
   yacc.py:2393:    (2) PROGRAM -> PROGRAM CLASSDEF . semi
   yacc.py:2394:
   yacc.py:2504:    semi            shift and go to state 7
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 6
   yacc.py:2391:
   yacc.py:2393:    (3) CLASSDEF -> class type . lbrace rbrace
   yacc.py:2393:    (4) CLASSDEF -> class type . lbrace FEATURE semi rbrace
   yacc.py:2393:    (5) CLASSDEF -> class type . inherits type lbrace rbrace
   yacc.py:2393:    (6) CLASSDEF -> class type . inherits type lbrace FEATURE rbrace
   yacc.py:2394:
   yacc.py:2504:    lbrace          shift and go to state 9
   yacc.py:2504:    inherits        shift and go to state 8
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 7
   yacc.py:2391:
   yacc.py:2393:    (2) PROGRAM -> PROGRAM CLASSDEF semi .
   yacc.py:2394:
   yacc.py:2504:    class           reduce using rule 2 (PROGRAM -> PROGRAM CLASSDEF semi .)
   yacc.py:2504:    $end            reduce using rule 2 (PROGRAM -> PROGRAM CLASSDEF semi .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 8
   yacc.py:2391:
   yacc.py:2393:    (5) CLASSDEF -> class type inherits . type lbrace rbrace
   yacc.py:2393:    (6) CLASSDEF -> class type inherits . type lbrace FEATURE rbrace
   yacc.py:2394:
   yacc.py:2504:    type            shift and go to state 10
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 9
   yacc.py:2391:
   yacc.py:2393:    (3) CLASSDEF -> class type lbrace . rbrace
   yacc.py:2393:    (4) CLASSDEF -> class type lbrace . FEATURE semi rbrace
   yacc.py:2393:    (7) FEATURE -> . identifier lparen FORMAL rparen colon type lbrace EXPR rbrace
   yacc.py:2393:    (8) FEATURE -> . identifier colon type
   yacc.py:2393:    (9) FEATURE -> . identifier colon type larrow EXPR
   yacc.py:2394:
   yacc.py:2504:    rbrace          shift and go to state 11
   yacc.py:2504:    identifier      shift and go to state 13
   yacc.py:2506:
   yacc.py:2531:    FEATURE                        shift and go to state 12
   yacc.py:2389:
   yacc.py:2390:state 10
   yacc.py:2391:
   yacc.py:2393:    (5) CLASSDEF -> class type inherits type . lbrace rbrace
   yacc.py:2393:    (6) CLASSDEF -> class type inherits type . lbrace FEATURE rbrace
   yacc.py:2394:
   yacc.py:2504:    lbrace          shift and go to state 14
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 11
   yacc.py:2391:
   yacc.py:2393:    (3) CLASSDEF -> class type lbrace rbrace .
   yacc.py:2394:
   yacc.py:2504:    semi            reduce using rule 3 (CLASSDEF -> class type lbrace rbrace .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 12
   yacc.py:2391:
   yacc.py:2393:    (4) CLASSDEF -> class type lbrace FEATURE . semi rbrace
   yacc.py:2394:
   yacc.py:2504:    semi            shift and go to state 15
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 13
   yacc.py:2391:
   yacc.py:2393:    (7) FEATURE -> identifier . lparen FORMAL rparen colon type lbrace EXPR rbrace
   yacc.py:2393:    (8) FEATURE -> identifier . colon type
   yacc.py:2393:    (9) FEATURE -> identifier . colon type larrow EXPR
   yacc.py:2394:
   yacc.py:2504:    lparen          shift and go to state 17
   yacc.py:2504:    colon           shift and go to state 16
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 14
   yacc.py:2391:
   yacc.py:2393:    (5) CLASSDEF -> class type inherits type lbrace . rbrace
   yacc.py:2393:    (6) CLASSDEF -> class type inherits type lbrace . FEATURE rbrace
   yacc.py:2393:    (7) FEATURE -> . identifier lparen FORMAL rparen colon type lbrace EXPR rbrace
   yacc.py:2393:    (8) FEATURE -> . identifier colon type
   yacc.py:2393:    (9) FEATURE -> . identifier colon type larrow EXPR
   yacc.py:2394:
   yacc.py:2504:    rbrace          shift and go to state 18
   yacc.py:2504:    identifier      shift and go to state 13
   yacc.py:2506:
   yacc.py:2531:    FEATURE                        shift and go to state 19
   yacc.py:2389:
   yacc.py:2390:state 15
   yacc.py:2391:
   yacc.py:2393:    (4) CLASSDEF -> class type lbrace FEATURE semi . rbrace
   yacc.py:2394:
   yacc.py:2504:    rbrace          shift and go to state 20
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 16
   yacc.py:2391:
   yacc.py:2393:    (8) FEATURE -> identifier colon . type
   yacc.py:2393:    (9) FEATURE -> identifier colon . type larrow EXPR
   yacc.py:2394:
   yacc.py:2504:    type            shift and go to state 21
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 17
   yacc.py:2391:
   yacc.py:2393:    (7) FEATURE -> identifier lparen . FORMAL rparen colon type lbrace EXPR rbrace
   yacc.py:2393:    (10) FORMAL -> . identifier colon type
   yacc.py:2393:    (11) FORMAL -> . FORMAL comma identifier colon type
   yacc.py:2393:    (12) FORMAL -> .
   yacc.py:2394:
   yacc.py:2504:    identifier      shift and go to state 22
   yacc.py:2504:    rparen          reduce using rule 12 (FORMAL -> .)
   yacc.py:2504:    comma           reduce using rule 12 (FORMAL -> .)
   yacc.py:2506:
   yacc.py:2531:    FORMAL                         shift and go to state 23
   yacc.py:2389:
   yacc.py:2390:state 18
   yacc.py:2391:
   yacc.py:2393:    (5) CLASSDEF -> class type inherits type lbrace rbrace .
   yacc.py:2394:
   yacc.py:2504:    semi            reduce using rule 5 (CLASSDEF -> class type inherits type lbrace rbrace .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 19
   yacc.py:2391:
   yacc.py:2393:    (6) CLASSDEF -> class type inherits type lbrace FEATURE . rbrace
   yacc.py:2394:
   yacc.py:2504:    rbrace          shift and go to state 24
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 20
   yacc.py:2391:
   yacc.py:2393:    (4) CLASSDEF -> class type lbrace FEATURE semi rbrace .
   yacc.py:2394:
   yacc.py:2504:    semi            reduce using rule 4 (CLASSDEF -> class type lbrace FEATURE semi rbrace .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 21
   yacc.py:2391:
   yacc.py:2393:    (8) FEATURE -> identifier colon type .
   yacc.py:2393:    (9) FEATURE -> identifier colon type . larrow EXPR
   yacc.py:2394:
   yacc.py:2504:    semi            reduce using rule 8 (FEATURE -> identifier colon type .)
   yacc.py:2504:    rbrace          reduce using rule 8 (FEATURE -> identifier colon type .)
   yacc.py:2504:    larrow          shift and go to state 25
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 22
   yacc.py:2391:
   yacc.py:2393:    (10) FORMAL -> identifier . colon type
   yacc.py:2394:
   yacc.py:2504:    colon           shift and go to state 26
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 23
   yacc.py:2391:
   yacc.py:2393:    (7) FEATURE -> identifier lparen FORMAL . rparen colon type lbrace EXPR rbrace
   yacc.py:2393:    (11) FORMAL -> FORMAL . comma identifier colon type
   yacc.py:2394:
   yacc.py:2504:    rparen          shift and go to state 27
   yacc.py:2504:    comma           shift and go to state 28
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 24
   yacc.py:2391:
   yacc.py:2393:    (6) CLASSDEF -> class type inherits type lbrace FEATURE rbrace .
   yacc.py:2394:
   yacc.py:2504:    semi            reduce using rule 6 (CLASSDEF -> class type inherits type lbrace FEATURE rbrace .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 25
   yacc.py:2391:
   yacc.py:2393:    (9) FEATURE -> identifier colon type larrow . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 33
   yacc.py:2389:
   yacc.py:2390:state 26
   yacc.py:2391:
   yacc.py:2393:    (10) FORMAL -> identifier colon . type
   yacc.py:2394:
   yacc.py:2504:    type            shift and go to state 45
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 27
   yacc.py:2391:
   yacc.py:2393:    (7) FEATURE -> identifier lparen FORMAL rparen . colon type lbrace EXPR rbrace
   yacc.py:2394:
   yacc.py:2504:    colon           shift and go to state 46
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 28
   yacc.py:2391:
   yacc.py:2393:    (11) FORMAL -> FORMAL comma . identifier colon type
   yacc.py:2394:
   yacc.py:2504:    identifier      shift and go to state 47
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 29
   yacc.py:2391:
   yacc.py:2393:    (44) EXPR -> false .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    dot             reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    comma           reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    semi            reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    plus            reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    minus           reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    times           reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    divide          reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    lt              reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    le              reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    equals          reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    rbrace          reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    then            reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    rparen          reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    of              reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    loop            reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    else            reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    pool            reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    fi              reduce using rule 44 (EXPR -> false .)
   yacc.py:2504:    in              reduce using rule 44 (EXPR -> false .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 30
   yacc.py:2391:
   yacc.py:2393:    (30) EXPR -> tilde . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 48
   yacc.py:2389:
   yacc.py:2390:state 31
   yacc.py:2391:
   yacc.py:2393:    (24) EXPR -> if . EXPR then EXPR else EXPR fi
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 49
   yacc.py:2389:
   yacc.py:2390:state 32
   yacc.py:2391:
   yacc.py:2393:    (41) EXPR -> integer .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    dot             reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    comma           reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    semi            reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    plus            reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    minus           reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    times           reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    divide          reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    lt              reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    le              reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    equals          reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    rbrace          reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    then            reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    rparen          reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    of              reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    loop            reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    else            reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    pool            reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    fi              reduce using rule 41 (EXPR -> integer .)
   yacc.py:2504:    in              reduce using rule 41 (EXPR -> integer .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 33
   yacc.py:2391:
   yacc.py:2393:    (9) FEATURE -> identifier colon type larrow EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    semi            reduce using rule 9 (FEATURE -> identifier colon type larrow EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 9 (FEATURE -> identifier colon type larrow EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 34
   yacc.py:2391:
   yacc.py:2393:    (29) EXPR -> isvoid . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 61
   yacc.py:2389:
   yacc.py:2390:state 35
   yacc.py:2391:
   yacc.py:2393:    (28) EXPR -> new . type
   yacc.py:2394:
   yacc.py:2504:    type            shift and go to state 62
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 36
   yacc.py:2391:
   yacc.py:2393:    (42) EXPR -> string .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    dot             reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    comma           reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    semi            reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    plus            reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    minus           reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    times           reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    divide          reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    lt              reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    le              reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    equals          reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    rbrace          reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    then            reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    rparen          reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    of              reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    loop            reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    else            reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    pool            reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    fi              reduce using rule 42 (EXPR -> string .)
   yacc.py:2504:    in              reduce using rule 42 (EXPR -> string .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 37
   yacc.py:2391:
   yacc.py:2393:    (16) EXPR -> let . identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> let . identifier colon type larrow EXPR in EXPR
   yacc.py:2394:
   yacc.py:2504:    identifier      shift and go to state 63
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 38
   yacc.py:2391:
   yacc.py:2393:    (18) EXPR -> lparen . EXPR rparen
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 64
   yacc.py:2389:
   yacc.py:2390:state 39
   yacc.py:2391:
   yacc.py:2393:    (31) EXPR -> not . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 65
   yacc.py:2389:
   yacc.py:2390:state 40
   yacc.py:2391:
   yacc.py:2393:    (43) EXPR -> true .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    dot             reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    comma           reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    semi            reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    plus            reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    minus           reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    times           reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    divide          reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    lt              reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    le              reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    equals          reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    rbrace          reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    then            reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    rparen          reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    of              reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    loop            reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    else            reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    pool            reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    fi              reduce using rule 43 (EXPR -> true .)
   yacc.py:2504:    in              reduce using rule 43 (EXPR -> true .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 41
   yacc.py:2391:
   yacc.py:2393:    (13) EXPR -> case . EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 66
   yacc.py:2389:
   yacc.py:2390:state 42
   yacc.py:2391:
   yacc.py:2393:    (19) EXPR -> lbrace . EXPR semi rbrace
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 67
   yacc.py:2389:
   yacc.py:2390:state 43
   yacc.py:2391:
   yacc.py:2393:    (25) EXPR -> while . EXPR loop EXPR pool
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 68
   yacc.py:2389:
   yacc.py:2390:state 44
   yacc.py:2391:
   yacc.py:2393:    (20) EXPR -> identifier . larrow EXPR
   yacc.py:2393:    (21) EXPR -> identifier . lparen EXPR rparen
   yacc.py:2393:    (32) EXPR -> identifier . lparen rparen
   yacc.py:2393:    (40) EXPR -> identifier .
   yacc.py:2394:
   yacc.py:2504:    larrow          shift and go to state 69
   yacc.py:2504:    lparen          shift and go to state 70
   yacc.py:2504:    at              reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    dot             reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    comma           reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    semi            reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    plus            reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    minus           reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    times           reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    divide          reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    lt              reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    le              reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    equals          reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    rbrace          reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    then            reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    rparen          reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    of              reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    loop            reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    else            reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    pool            reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    fi              reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2504:    in              reduce using rule 40 (EXPR -> identifier .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 45
   yacc.py:2391:
   yacc.py:2393:    (10) FORMAL -> identifier colon type .
   yacc.py:2394:
   yacc.py:2504:    rparen          reduce using rule 10 (FORMAL -> identifier colon type .)
   yacc.py:2504:    comma           reduce using rule 10 (FORMAL -> identifier colon type .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 46
   yacc.py:2391:
   yacc.py:2393:    (7) FEATURE -> identifier lparen FORMAL rparen colon . type lbrace EXPR rbrace
   yacc.py:2394:
   yacc.py:2504:    type            shift and go to state 71
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 47
   yacc.py:2391:
   yacc.py:2393:    (11) FORMAL -> FORMAL comma identifier . colon type
   yacc.py:2394:
   yacc.py:2504:    colon           shift and go to state 72
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 48
   yacc.py:2391:
   yacc.py:2393:    (30) EXPR -> tilde EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    semi            reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    plus            reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    minus           reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    times           reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    divide          reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    lt              reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    le              reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    equals          reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    then            reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    rparen          reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    of              reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    loop            reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    else            reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    pool            reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    fi              reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    in              reduce using rule 30 (EXPR -> tilde EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 30 (EXPR -> tilde EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 30 (EXPR -> tilde EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2513:  ! plus            [ shift and go to state 50 ]
   yacc.py:2513:  ! minus           [ shift and go to state 59 ]
   yacc.py:2513:  ! times           [ shift and go to state 54 ]
   yacc.py:2513:  ! divide          [ shift and go to state 51 ]
   yacc.py:2513:  ! lt              [ shift and go to state 55 ]
   yacc.py:2513:  ! le              [ shift and go to state 56 ]
   yacc.py:2513:  ! equals          [ shift and go to state 53 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 49
   yacc.py:2391:
   yacc.py:2393:    (24) EXPR -> if EXPR . then EXPR else EXPR fi
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    then            shift and go to state 73
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 50
   yacc.py:2391:
   yacc.py:2393:    (33) EXPR -> EXPR plus . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 74
   yacc.py:2389:
   yacc.py:2390:state 51
   yacc.py:2391:
   yacc.py:2393:    (36) EXPR -> EXPR divide . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 75
   yacc.py:2389:
   yacc.py:2390:state 52
   yacc.py:2391:
   yacc.py:2393:    (27) EXPR -> EXPR semi . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 76
   yacc.py:2389:
   yacc.py:2390:state 53
   yacc.py:2391:
   yacc.py:2393:    (39) EXPR -> EXPR equals . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 77
   yacc.py:2389:
   yacc.py:2390:state 54
   yacc.py:2391:
   yacc.py:2393:    (35) EXPR -> EXPR times . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 78
   yacc.py:2389:
   yacc.py:2390:state 55
   yacc.py:2391:
   yacc.py:2393:    (37) EXPR -> EXPR lt . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 79
   yacc.py:2389:
   yacc.py:2390:state 56
   yacc.py:2391:
   yacc.py:2393:    (38) EXPR -> EXPR le . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 80
   yacc.py:2389:
   yacc.py:2390:state 57
   yacc.py:2391:
   yacc.py:2393:    (14) EXPR -> EXPR at . type dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR at . type dot identifier lparen rparen
   yacc.py:2394:
   yacc.py:2504:    type            shift and go to state 81
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 58
   yacc.py:2391:
   yacc.py:2393:    (26) EXPR -> EXPR comma . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 82
   yacc.py:2389:
   yacc.py:2390:state 59
   yacc.py:2391:
   yacc.py:2393:    (34) EXPR -> EXPR minus . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 83
   yacc.py:2389:
   yacc.py:2390:state 60
   yacc.py:2391:
   yacc.py:2393:    (15) EXPR -> EXPR dot . identifier lparen EXPR rparen
   yacc.py:2393:    (23) EXPR -> EXPR dot . identifier lparen rparen
   yacc.py:2394:
   yacc.py:2504:    identifier      shift and go to state 84
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 61
   yacc.py:2391:
   yacc.py:2393:    (29) EXPR -> isvoid EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    semi            reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    plus            reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    minus           reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    times           reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    divide          reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    lt              reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    le              reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    equals          reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    then            reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    rparen          reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    of              reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    loop            reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    else            reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    pool            reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    fi              reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    in              reduce using rule 29 (EXPR -> isvoid EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 29 (EXPR -> isvoid EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 29 (EXPR -> isvoid EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2513:  ! plus            [ shift and go to state 50 ]
   yacc.py:2513:  ! minus           [ shift and go to state 59 ]
   yacc.py:2513:  ! times           [ shift and go to state 54 ]
   yacc.py:2513:  ! divide          [ shift and go to state 51 ]
   yacc.py:2513:  ! lt              [ shift and go to state 55 ]
   yacc.py:2513:  ! le              [ shift and go to state 56 ]
   yacc.py:2513:  ! equals          [ shift and go to state 53 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 62
   yacc.py:2391:
   yacc.py:2393:    (28) EXPR -> new type .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    dot             reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    comma           reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    semi            reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    plus            reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    minus           reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    times           reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    divide          reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    lt              reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    le              reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    equals          reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    rbrace          reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    then            reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    rparen          reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    of              reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    loop            reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    else            reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    pool            reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    fi              reduce using rule 28 (EXPR -> new type .)
   yacc.py:2504:    in              reduce using rule 28 (EXPR -> new type .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 63
   yacc.py:2391:
   yacc.py:2393:    (16) EXPR -> let identifier . colon type in EXPR
   yacc.py:2393:    (17) EXPR -> let identifier . colon type larrow EXPR in EXPR
   yacc.py:2394:
   yacc.py:2504:    colon           shift and go to state 85
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 64
   yacc.py:2391:
   yacc.py:2393:    (18) EXPR -> lparen EXPR . rparen
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    rparen          shift and go to state 86
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 65
   yacc.py:2391:
   yacc.py:2393:    (31) EXPR -> not EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    semi            reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    then            reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    rparen          reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    of              reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    loop            reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    else            reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    pool            reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    fi              reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    in              reduce using rule 31 (EXPR -> not EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 31 (EXPR -> not EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 31 (EXPR -> not EXPR .) ]
   yacc.py:2513:  ! plus            [ reduce using rule 31 (EXPR -> not EXPR .) ]
   yacc.py:2513:  ! minus           [ reduce using rule 31 (EXPR -> not EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 31 (EXPR -> not EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 31 (EXPR -> not EXPR .) ]
   yacc.py:2513:  ! lt              [ reduce using rule 31 (EXPR -> not EXPR .) ]
   yacc.py:2513:  ! le              [ reduce using rule 31 (EXPR -> not EXPR .) ]
   yacc.py:2513:  ! equals          [ reduce using rule 31 (EXPR -> not EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 66
   yacc.py:2391:
   yacc.py:2393:    (13) EXPR -> case EXPR . of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    of              shift and go to state 87
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 67
   yacc.py:2391:
   yacc.py:2393:    (19) EXPR -> lbrace EXPR . semi rbrace
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    semi            shift and go to state 88
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 68
   yacc.py:2391:
   yacc.py:2393:    (25) EXPR -> while EXPR . loop EXPR pool
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    loop            shift and go to state 89
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 69
   yacc.py:2391:
   yacc.py:2393:    (20) EXPR -> identifier larrow . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 90
   yacc.py:2389:
   yacc.py:2390:state 70
   yacc.py:2391:
   yacc.py:2393:    (21) EXPR -> identifier lparen . EXPR rparen
   yacc.py:2393:    (32) EXPR -> identifier lparen . rparen
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    rparen          shift and go to state 92
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 91
   yacc.py:2389:
   yacc.py:2390:state 71
   yacc.py:2391:
   yacc.py:2393:    (7) FEATURE -> identifier lparen FORMAL rparen colon type . lbrace EXPR rbrace
   yacc.py:2394:
   yacc.py:2504:    lbrace          shift and go to state 93
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 72
   yacc.py:2391:
   yacc.py:2393:    (11) FORMAL -> FORMAL comma identifier colon . type
   yacc.py:2394:
   yacc.py:2504:    type            shift and go to state 94
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 73
   yacc.py:2391:
   yacc.py:2393:    (24) EXPR -> if EXPR then . EXPR else EXPR fi
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 95
   yacc.py:2389:
   yacc.py:2390:state 74
   yacc.py:2391:
   yacc.py:2393:    (33) EXPR -> EXPR plus EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    semi            reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    plus            reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    minus           reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    lt              reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    le              reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    equals          reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    then            reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    rparen          reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    of              reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    loop            reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    else            reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    pool            reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    fi              reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    in              reduce using rule 33 (EXPR -> EXPR plus EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 33 (EXPR -> EXPR plus EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 33 (EXPR -> EXPR plus EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 33 (EXPR -> EXPR plus EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 33 (EXPR -> EXPR plus EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2513:  ! plus            [ shift and go to state 50 ]
   yacc.py:2513:  ! minus           [ shift and go to state 59 ]
   yacc.py:2513:  ! lt              [ shift and go to state 55 ]
   yacc.py:2513:  ! le              [ shift and go to state 56 ]
   yacc.py:2513:  ! equals          [ shift and go to state 53 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 75
   yacc.py:2391:
   yacc.py:2393:    (36) EXPR -> EXPR divide EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    semi            reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    plus            reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    minus           reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    times           reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    divide          reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    lt              reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    le              reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    equals          reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    then            reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    rparen          reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    of              reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    loop            reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    else            reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    pool            reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    fi              reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    in              reduce using rule 36 (EXPR -> EXPR divide EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 36 (EXPR -> EXPR divide EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 36 (EXPR -> EXPR divide EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2513:  ! plus            [ shift and go to state 50 ]
   yacc.py:2513:  ! minus           [ shift and go to state 59 ]
   yacc.py:2513:  ! times           [ shift and go to state 54 ]
   yacc.py:2513:  ! divide          [ shift and go to state 51 ]
   yacc.py:2513:  ! lt              [ shift and go to state 55 ]
   yacc.py:2513:  ! le              [ shift and go to state 56 ]
   yacc.py:2513:  ! equals          [ shift and go to state 53 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 76
   yacc.py:2391:
   yacc.py:2393:    (27) EXPR -> EXPR semi EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2483:  ! shift/reduce conflict for at resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for dot resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for comma resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for semi resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for times resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for divide resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for lt resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for le resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for equals resolved as shift
   yacc.py:2504:    rbrace          reduce using rule 27 (EXPR -> EXPR semi EXPR .)
   yacc.py:2504:    then            reduce using rule 27 (EXPR -> EXPR semi EXPR .)
   yacc.py:2504:    rparen          reduce using rule 27 (EXPR -> EXPR semi EXPR .)
   yacc.py:2504:    of              reduce using rule 27 (EXPR -> EXPR semi EXPR .)
   yacc.py:2504:    loop            reduce using rule 27 (EXPR -> EXPR semi EXPR .)
   yacc.py:2504:    else            reduce using rule 27 (EXPR -> EXPR semi EXPR .)
   yacc.py:2504:    pool            reduce using rule 27 (EXPR -> EXPR semi EXPR .)
   yacc.py:2504:    fi              reduce using rule 27 (EXPR -> EXPR semi EXPR .)
   yacc.py:2504:    in              reduce using rule 27 (EXPR -> EXPR semi EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2513:  ! comma           [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2513:  ! semi            [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2513:  ! plus            [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2513:  ! minus           [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2513:  ! lt              [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2513:  ! le              [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2513:  ! equals          [ reduce using rule 27 (EXPR -> EXPR semi EXPR .) ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 77
   yacc.py:2391:
   yacc.py:2393:    (39) EXPR -> EXPR equals EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    semi            reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    lt              reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    le              reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    equals          reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    then            reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    rparen          reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    of              reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    loop            reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    else            reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    pool            reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    fi              reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    in              reduce using rule 39 (EXPR -> EXPR equals EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 39 (EXPR -> EXPR equals EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 39 (EXPR -> EXPR equals EXPR .) ]
   yacc.py:2513:  ! plus            [ reduce using rule 39 (EXPR -> EXPR equals EXPR .) ]
   yacc.py:2513:  ! minus           [ reduce using rule 39 (EXPR -> EXPR equals EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 39 (EXPR -> EXPR equals EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 39 (EXPR -> EXPR equals EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2513:  ! lt              [ shift and go to state 55 ]
   yacc.py:2513:  ! le              [ shift and go to state 56 ]
   yacc.py:2513:  ! equals          [ shift and go to state 53 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 78
   yacc.py:2391:
   yacc.py:2393:    (35) EXPR -> EXPR times EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    semi            reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    plus            reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    minus           reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    times           reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    divide          reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    lt              reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    le              reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    equals          reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    then            reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    rparen          reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    of              reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    loop            reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    else            reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    pool            reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    fi              reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    in              reduce using rule 35 (EXPR -> EXPR times EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 35 (EXPR -> EXPR times EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 35 (EXPR -> EXPR times EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2513:  ! plus            [ shift and go to state 50 ]
   yacc.py:2513:  ! minus           [ shift and go to state 59 ]
   yacc.py:2513:  ! times           [ shift and go to state 54 ]
   yacc.py:2513:  ! divide          [ shift and go to state 51 ]
   yacc.py:2513:  ! lt              [ shift and go to state 55 ]
   yacc.py:2513:  ! le              [ shift and go to state 56 ]
   yacc.py:2513:  ! equals          [ shift and go to state 53 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 79
   yacc.py:2391:
   yacc.py:2393:    (37) EXPR -> EXPR lt EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    semi            reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    lt              reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    le              reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    equals          reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    then            reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    rparen          reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    of              reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    loop            reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    else            reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    pool            reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    fi              reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    in              reduce using rule 37 (EXPR -> EXPR lt EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 37 (EXPR -> EXPR lt EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 37 (EXPR -> EXPR lt EXPR .) ]
   yacc.py:2513:  ! plus            [ reduce using rule 37 (EXPR -> EXPR lt EXPR .) ]
   yacc.py:2513:  ! minus           [ reduce using rule 37 (EXPR -> EXPR lt EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 37 (EXPR -> EXPR lt EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 37 (EXPR -> EXPR lt EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2513:  ! lt              [ shift and go to state 55 ]
   yacc.py:2513:  ! le              [ shift and go to state 56 ]
   yacc.py:2513:  ! equals          [ shift and go to state 53 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 80
   yacc.py:2391:
   yacc.py:2393:    (38) EXPR -> EXPR le EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    semi            reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    lt              reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    le              reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    equals          reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    then            reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    rparen          reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    of              reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    loop            reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    else            reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    pool            reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    fi              reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    in              reduce using rule 38 (EXPR -> EXPR le EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 38 (EXPR -> EXPR le EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 38 (EXPR -> EXPR le EXPR .) ]
   yacc.py:2513:  ! plus            [ reduce using rule 38 (EXPR -> EXPR le EXPR .) ]
   yacc.py:2513:  ! minus           [ reduce using rule 38 (EXPR -> EXPR le EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 38 (EXPR -> EXPR le EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 38 (EXPR -> EXPR le EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2513:  ! lt              [ shift and go to state 55 ]
   yacc.py:2513:  ! le              [ shift and go to state 56 ]
   yacc.py:2513:  ! equals          [ shift and go to state 53 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 81
   yacc.py:2391:
   yacc.py:2393:    (14) EXPR -> EXPR at type . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR at type . dot identifier lparen rparen
   yacc.py:2394:
   yacc.py:2504:    dot             shift and go to state 96
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 82
   yacc.py:2391:
   yacc.py:2393:    (26) EXPR -> EXPR comma EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2483:  ! shift/reduce conflict for at resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for dot resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for comma resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for semi resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for times resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for divide resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for lt resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for le resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for equals resolved as shift
   yacc.py:2504:    rbrace          reduce using rule 26 (EXPR -> EXPR comma EXPR .)
   yacc.py:2504:    then            reduce using rule 26 (EXPR -> EXPR comma EXPR .)
   yacc.py:2504:    rparen          reduce using rule 26 (EXPR -> EXPR comma EXPR .)
   yacc.py:2504:    of              reduce using rule 26 (EXPR -> EXPR comma EXPR .)
   yacc.py:2504:    loop            reduce using rule 26 (EXPR -> EXPR comma EXPR .)
   yacc.py:2504:    else            reduce using rule 26 (EXPR -> EXPR comma EXPR .)
   yacc.py:2504:    pool            reduce using rule 26 (EXPR -> EXPR comma EXPR .)
   yacc.py:2504:    fi              reduce using rule 26 (EXPR -> EXPR comma EXPR .)
   yacc.py:2504:    in              reduce using rule 26 (EXPR -> EXPR comma EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2513:  ! comma           [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2513:  ! semi            [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2513:  ! plus            [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2513:  ! minus           [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2513:  ! lt              [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2513:  ! le              [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2513:  ! equals          [ reduce using rule 26 (EXPR -> EXPR comma EXPR .) ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 83
   yacc.py:2391:
   yacc.py:2393:    (34) EXPR -> EXPR minus EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    semi            reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    plus            reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    minus           reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    lt              reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    le              reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    equals          reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    then            reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    rparen          reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    of              reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    loop            reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    else            reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    pool            reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    fi              reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    in              reduce using rule 34 (EXPR -> EXPR minus EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 34 (EXPR -> EXPR minus EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 34 (EXPR -> EXPR minus EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 34 (EXPR -> EXPR minus EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 34 (EXPR -> EXPR minus EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2513:  ! plus            [ shift and go to state 50 ]
   yacc.py:2513:  ! minus           [ shift and go to state 59 ]
   yacc.py:2513:  ! lt              [ shift and go to state 55 ]
   yacc.py:2513:  ! le              [ shift and go to state 56 ]
   yacc.py:2513:  ! equals          [ shift and go to state 53 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 84
   yacc.py:2391:
   yacc.py:2393:    (15) EXPR -> EXPR dot identifier . lparen EXPR rparen
   yacc.py:2393:    (23) EXPR -> EXPR dot identifier . lparen rparen
   yacc.py:2394:
   yacc.py:2504:    lparen          shift and go to state 97
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 85
   yacc.py:2391:
   yacc.py:2393:    (16) EXPR -> let identifier colon . type in EXPR
   yacc.py:2393:    (17) EXPR -> let identifier colon . type larrow EXPR in EXPR
   yacc.py:2394:
   yacc.py:2504:    type            shift and go to state 98
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 86
   yacc.py:2391:
   yacc.py:2393:    (18) EXPR -> lparen EXPR rparen .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    dot             reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    comma           reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    semi            reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    plus            reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    minus           reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    times           reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    divide          reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    lt              reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    le              reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    equals          reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    rbrace          reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    then            reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    rparen          reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    of              reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    loop            reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    else            reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    pool            reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    fi              reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2504:    in              reduce using rule 18 (EXPR -> lparen EXPR rparen .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 87
   yacc.py:2391:
   yacc.py:2393:    (13) EXPR -> case EXPR of . identifier colon type rarrow EXPR semi esac
   yacc.py:2394:
   yacc.py:2504:    identifier      shift and go to state 99
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 88
   yacc.py:2391:
   yacc.py:2393:    (19) EXPR -> lbrace EXPR semi . rbrace
   yacc.py:2393:    (27) EXPR -> EXPR semi . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    rbrace          shift and go to state 100
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 76
   yacc.py:2389:
   yacc.py:2390:state 89
   yacc.py:2391:
   yacc.py:2393:    (25) EXPR -> while EXPR loop . EXPR pool
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 101
   yacc.py:2389:
   yacc.py:2390:state 90
   yacc.py:2391:
   yacc.py:2393:    (20) EXPR -> identifier larrow EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    comma           reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    semi            reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    rbrace          reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    then            reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    rparen          reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    of              reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    loop            reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    else            reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    pool            reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    fi              reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    in              reduce using rule 20 (EXPR -> identifier larrow EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 20 (EXPR -> identifier larrow EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 20 (EXPR -> identifier larrow EXPR .) ]
   yacc.py:2513:  ! plus            [ reduce using rule 20 (EXPR -> identifier larrow EXPR .) ]
   yacc.py:2513:  ! minus           [ reduce using rule 20 (EXPR -> identifier larrow EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 20 (EXPR -> identifier larrow EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 20 (EXPR -> identifier larrow EXPR .) ]
   yacc.py:2513:  ! lt              [ reduce using rule 20 (EXPR -> identifier larrow EXPR .) ]
   yacc.py:2513:  ! le              [ reduce using rule 20 (EXPR -> identifier larrow EXPR .) ]
   yacc.py:2513:  ! equals          [ reduce using rule 20 (EXPR -> identifier larrow EXPR .) ]
   yacc.py:2513:  ! comma           [ shift and go to state 58 ]
   yacc.py:2513:  ! semi            [ shift and go to state 52 ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 91
   yacc.py:2391:
   yacc.py:2393:    (21) EXPR -> identifier lparen EXPR . rparen
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    rparen          shift and go to state 102
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 92
   yacc.py:2391:
   yacc.py:2393:    (32) EXPR -> identifier lparen rparen .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    dot             reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    comma           reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    semi            reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    plus            reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    minus           reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    times           reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    divide          reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    lt              reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    le              reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    equals          reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    rbrace          reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    then            reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    rparen          reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    of              reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    loop            reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    else            reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    pool            reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    fi              reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2504:    in              reduce using rule 32 (EXPR -> identifier lparen rparen .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 93
   yacc.py:2391:
   yacc.py:2393:    (7) FEATURE -> identifier lparen FORMAL rparen colon type lbrace . EXPR rbrace
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 103
   yacc.py:2389:
   yacc.py:2390:state 94
   yacc.py:2391:
   yacc.py:2393:    (11) FORMAL -> FORMAL comma identifier colon type .
   yacc.py:2394:
   yacc.py:2504:    rparen          reduce using rule 11 (FORMAL -> FORMAL comma identifier colon type .)
   yacc.py:2504:    comma           reduce using rule 11 (FORMAL -> FORMAL comma identifier colon type .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 95
   yacc.py:2391:
   yacc.py:2393:    (24) EXPR -> if EXPR then EXPR . else EXPR fi
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    else            shift and go to state 104
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 96
   yacc.py:2391:
   yacc.py:2393:    (14) EXPR -> EXPR at type dot . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR at type dot . identifier lparen rparen
   yacc.py:2394:
   yacc.py:2504:    identifier      shift and go to state 105
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 97
   yacc.py:2391:
   yacc.py:2393:    (15) EXPR -> EXPR dot identifier lparen . EXPR rparen
   yacc.py:2393:    (23) EXPR -> EXPR dot identifier lparen . rparen
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    rparen          shift and go to state 107
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 106
   yacc.py:2389:
   yacc.py:2390:state 98
   yacc.py:2391:
   yacc.py:2393:    (16) EXPR -> let identifier colon type . in EXPR
   yacc.py:2393:    (17) EXPR -> let identifier colon type . larrow EXPR in EXPR
   yacc.py:2394:
   yacc.py:2504:    in              shift and go to state 109
   yacc.py:2504:    larrow          shift and go to state 108
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 99
   yacc.py:2391:
   yacc.py:2393:    (13) EXPR -> case EXPR of identifier . colon type rarrow EXPR semi esac
   yacc.py:2394:
   yacc.py:2504:    colon           shift and go to state 110
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 100
   yacc.py:2391:
   yacc.py:2393:    (19) EXPR -> lbrace EXPR semi rbrace .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    dot             reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    comma           reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    semi            reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    plus            reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    minus           reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    times           reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    divide          reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    lt              reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    le              reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    equals          reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    rbrace          reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    then            reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    rparen          reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    of              reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    loop            reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    else            reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    pool            reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    fi              reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2504:    in              reduce using rule 19 (EXPR -> lbrace EXPR semi rbrace .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 101
   yacc.py:2391:
   yacc.py:2393:    (25) EXPR -> while EXPR loop EXPR . pool
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    pool            shift and go to state 111
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 102
   yacc.py:2391:
   yacc.py:2393:    (21) EXPR -> identifier lparen EXPR rparen .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    dot             reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    comma           reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    semi            reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    plus            reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    minus           reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    times           reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    divide          reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    lt              reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    le              reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    equals          reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    rbrace          reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    then            reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    rparen          reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    of              reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    loop            reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    else            reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    pool            reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    fi              reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2504:    in              reduce using rule 21 (EXPR -> identifier lparen EXPR rparen .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 103
   yacc.py:2391:
   yacc.py:2393:    (7) FEATURE -> identifier lparen FORMAL rparen colon type lbrace EXPR . rbrace
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    rbrace          shift and go to state 112
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 104
   yacc.py:2391:
   yacc.py:2393:    (24) EXPR -> if EXPR then EXPR else . EXPR fi
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 113
   yacc.py:2389:
   yacc.py:2390:state 105
   yacc.py:2391:
   yacc.py:2393:    (14) EXPR -> EXPR at type dot identifier . lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR at type dot identifier . lparen rparen
   yacc.py:2394:
   yacc.py:2504:    lparen          shift and go to state 114
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 106
   yacc.py:2391:
   yacc.py:2393:    (15) EXPR -> EXPR dot identifier lparen EXPR . rparen
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    rparen          shift and go to state 115
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 107
   yacc.py:2391:
   yacc.py:2393:    (23) EXPR -> EXPR dot identifier lparen rparen .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    dot             reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    comma           reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    semi            reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    plus            reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    minus           reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    times           reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    divide          reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    lt              reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    le              reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    equals          reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    rbrace          reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    then            reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    rparen          reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    of              reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    loop            reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    else            reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    pool            reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    fi              reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2504:    in              reduce using rule 23 (EXPR -> EXPR dot identifier lparen rparen .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 108
   yacc.py:2391:
   yacc.py:2393:    (17) EXPR -> let identifier colon type larrow . EXPR in EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 116
   yacc.py:2389:
   yacc.py:2390:state 109
   yacc.py:2391:
   yacc.py:2393:    (16) EXPR -> let identifier colon type in . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 117
   yacc.py:2389:
   yacc.py:2390:state 110
   yacc.py:2391:
   yacc.py:2393:    (13) EXPR -> case EXPR of identifier colon . type rarrow EXPR semi esac
   yacc.py:2394:
   yacc.py:2504:    type            shift and go to state 118
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 111
   yacc.py:2391:
   yacc.py:2393:    (25) EXPR -> while EXPR loop EXPR pool .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    dot             reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    comma           reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    semi            reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    plus            reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    minus           reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    times           reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    divide          reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    lt              reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    le              reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    equals          reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    rbrace          reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    then            reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    rparen          reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    of              reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    loop            reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    else            reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    pool            reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    fi              reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2504:    in              reduce using rule 25 (EXPR -> while EXPR loop EXPR pool .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 112
   yacc.py:2391:
   yacc.py:2393:    (7) FEATURE -> identifier lparen FORMAL rparen colon type lbrace EXPR rbrace .
   yacc.py:2394:
   yacc.py:2504:    semi            reduce using rule 7 (FEATURE -> identifier lparen FORMAL rparen colon type lbrace EXPR rbrace .)
   yacc.py:2504:    rbrace          reduce using rule 7 (FEATURE -> identifier lparen FORMAL rparen colon type lbrace EXPR rbrace .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 113
   yacc.py:2391:
   yacc.py:2393:    (24) EXPR -> if EXPR then EXPR else EXPR . fi
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    fi              shift and go to state 119
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 114
   yacc.py:2391:
   yacc.py:2393:    (14) EXPR -> EXPR at type dot identifier lparen . EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR at type dot identifier lparen . rparen
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    rparen          shift and go to state 121
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 120
   yacc.py:2389:
   yacc.py:2390:state 115
   yacc.py:2391:
   yacc.py:2393:    (15) EXPR -> EXPR dot identifier lparen EXPR rparen .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    dot             reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    comma           reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    semi            reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    plus            reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    minus           reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    times           reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    divide          reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    lt              reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    le              reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    equals          reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    rbrace          reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    then            reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    rparen          reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    of              reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    loop            reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    else            reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    pool            reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    fi              reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2504:    in              reduce using rule 15 (EXPR -> EXPR dot identifier lparen EXPR rparen .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 116
   yacc.py:2391:
   yacc.py:2393:    (17) EXPR -> let identifier colon type larrow EXPR . in EXPR
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    in              shift and go to state 122
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 117
   yacc.py:2391:
   yacc.py:2393:    (16) EXPR -> let identifier colon type in EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2483:  ! shift/reduce conflict for at resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for dot resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for comma resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for semi resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for times resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for divide resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for lt resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for le resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for equals resolved as shift
   yacc.py:2504:    rbrace          reduce using rule 16 (EXPR -> let identifier colon type in EXPR .)
   yacc.py:2504:    then            reduce using rule 16 (EXPR -> let identifier colon type in EXPR .)
   yacc.py:2504:    rparen          reduce using rule 16 (EXPR -> let identifier colon type in EXPR .)
   yacc.py:2504:    of              reduce using rule 16 (EXPR -> let identifier colon type in EXPR .)
   yacc.py:2504:    loop            reduce using rule 16 (EXPR -> let identifier colon type in EXPR .)
   yacc.py:2504:    else            reduce using rule 16 (EXPR -> let identifier colon type in EXPR .)
   yacc.py:2504:    pool            reduce using rule 16 (EXPR -> let identifier colon type in EXPR .)
   yacc.py:2504:    fi              reduce using rule 16 (EXPR -> let identifier colon type in EXPR .)
   yacc.py:2504:    in              reduce using rule 16 (EXPR -> let identifier colon type in EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2513:  ! comma           [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2513:  ! semi            [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2513:  ! plus            [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2513:  ! minus           [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2513:  ! lt              [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2513:  ! le              [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2513:  ! equals          [ reduce using rule 16 (EXPR -> let identifier colon type in EXPR .) ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 118
   yacc.py:2391:
   yacc.py:2393:    (13) EXPR -> case EXPR of identifier colon type . rarrow EXPR semi esac
   yacc.py:2394:
   yacc.py:2504:    rarrow          shift and go to state 123
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 119
   yacc.py:2391:
   yacc.py:2393:    (24) EXPR -> if EXPR then EXPR else EXPR fi .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    dot             reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    comma           reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    semi            reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    plus            reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    minus           reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    times           reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    divide          reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    lt              reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    le              reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    equals          reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    rbrace          reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    then            reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    rparen          reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    of              reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    loop            reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    else            reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    pool            reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    fi              reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2504:    in              reduce using rule 24 (EXPR -> if EXPR then EXPR else EXPR fi .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 120
   yacc.py:2391:
   yacc.py:2393:    (14) EXPR -> EXPR at type dot identifier lparen EXPR . rparen
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    rparen          shift and go to state 124
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 121
   yacc.py:2391:
   yacc.py:2393:    (22) EXPR -> EXPR at type dot identifier lparen rparen .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    dot             reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    comma           reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    semi            reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    plus            reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    minus           reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    times           reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    divide          reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    lt              reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    le              reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    equals          reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    rbrace          reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    then            reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    rparen          reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    of              reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    loop            reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    else            reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    pool            reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    fi              reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2504:    in              reduce using rule 22 (EXPR -> EXPR at type dot identifier lparen rparen .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 122
   yacc.py:2391:
   yacc.py:2393:    (17) EXPR -> let identifier colon type larrow EXPR in . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 125
   yacc.py:2389:
   yacc.py:2390:state 123
   yacc.py:2391:
   yacc.py:2393:    (13) EXPR -> case EXPR of identifier colon type rarrow . EXPR semi esac
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 126
   yacc.py:2389:
   yacc.py:2390:state 124
   yacc.py:2391:
   yacc.py:2393:    (14) EXPR -> EXPR at type dot identifier lparen EXPR rparen .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    dot             reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    comma           reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    semi            reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    plus            reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    minus           reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    times           reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    divide          reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    lt              reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    le              reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    equals          reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    rbrace          reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    then            reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    rparen          reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    of              reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    loop            reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    else            reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    pool            reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    fi              reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2504:    in              reduce using rule 14 (EXPR -> EXPR at type dot identifier lparen EXPR rparen .)
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 125
   yacc.py:2391:
   yacc.py:2393:    (17) EXPR -> let identifier colon type larrow EXPR in EXPR .
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2483:  ! shift/reduce conflict for at resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for dot resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for comma resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for semi resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for times resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for divide resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for lt resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for le resolved as shift
   yacc.py:2483:  ! shift/reduce conflict for equals resolved as shift
   yacc.py:2504:    rbrace          reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .)
   yacc.py:2504:    then            reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .)
   yacc.py:2504:    rparen          reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .)
   yacc.py:2504:    of              reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .)
   yacc.py:2504:    loop            reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .)
   yacc.py:2504:    else            reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .)
   yacc.py:2504:    pool            reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .)
   yacc.py:2504:    fi              reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .)
   yacc.py:2504:    in              reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .)
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    semi            shift and go to state 52
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2513:  ! at              [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2513:  ! dot             [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2513:  ! comma           [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2513:  ! semi            [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2513:  ! plus            [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2513:  ! minus           [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2513:  ! times           [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2513:  ! divide          [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2513:  ! lt              [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2513:  ! le              [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2513:  ! equals          [ reduce using rule 17 (EXPR -> let identifier colon type larrow EXPR in EXPR .) ]
   yacc.py:2517:
   yacc.py:2389:
   yacc.py:2390:state 126
   yacc.py:2391:
   yacc.py:2393:    (13) EXPR -> case EXPR of identifier colon type rarrow EXPR . semi esac
   yacc.py:2393:    (14) EXPR -> EXPR . at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> EXPR . dot identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> EXPR . at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> EXPR . dot identifier lparen rparen
   yacc.py:2393:    (26) EXPR -> EXPR . comma EXPR
   yacc.py:2393:    (27) EXPR -> EXPR . semi EXPR
   yacc.py:2393:    (33) EXPR -> EXPR . plus EXPR
   yacc.py:2393:    (34) EXPR -> EXPR . minus EXPR
   yacc.py:2393:    (35) EXPR -> EXPR . times EXPR
   yacc.py:2393:    (36) EXPR -> EXPR . divide EXPR
   yacc.py:2393:    (37) EXPR -> EXPR . lt EXPR
   yacc.py:2393:    (38) EXPR -> EXPR . le EXPR
   yacc.py:2393:    (39) EXPR -> EXPR . equals EXPR
   yacc.py:2394:
   yacc.py:2504:    semi            shift and go to state 127
   yacc.py:2504:    at              shift and go to state 57
   yacc.py:2504:    dot             shift and go to state 60
   yacc.py:2504:    comma           shift and go to state 58
   yacc.py:2504:    plus            shift and go to state 50
   yacc.py:2504:    minus           shift and go to state 59
   yacc.py:2504:    times           shift and go to state 54
   yacc.py:2504:    divide          shift and go to state 51
   yacc.py:2504:    lt              shift and go to state 55
   yacc.py:2504:    le              shift and go to state 56
   yacc.py:2504:    equals          shift and go to state 53
   yacc.py:2506:
   yacc.py:2389:
   yacc.py:2390:state 127
   yacc.py:2391:
   yacc.py:2393:    (13) EXPR -> case EXPR of identifier colon type rarrow EXPR semi . esac
   yacc.py:2393:    (27) EXPR -> EXPR semi . EXPR
   yacc.py:2393:    (13) EXPR -> . case EXPR of identifier colon type rarrow EXPR semi esac
   yacc.py:2393:    (14) EXPR -> . EXPR at type dot identifier lparen EXPR rparen
   yacc.py:2393:    (15) EXPR -> . EXPR dot identifier lparen EXPR rparen
   yacc.py:2393:    (16) EXPR -> . let identifier colon type in EXPR
   yacc.py:2393:    (17) EXPR -> . let identifier colon type larrow EXPR in EXPR
   yacc.py:2393:    (18) EXPR -> . lparen EXPR rparen
   yacc.py:2393:    (19) EXPR -> . lbrace EXPR semi rbrace
   yacc.py:2393:    (20) EXPR -> . identifier larrow EXPR
   yacc.py:2393:    (21) EXPR -> . identifier lparen EXPR rparen
   yacc.py:2393:    (22) EXPR -> . EXPR at type dot identifier lparen rparen
   yacc.py:2393:    (23) EXPR -> . EXPR dot identifier lparen rparen
   yacc.py:2393:    (24) EXPR -> . if EXPR then EXPR else EXPR fi
   yacc.py:2393:    (25) EXPR -> . while EXPR loop EXPR pool
   yacc.py:2393:    (26) EXPR -> . EXPR comma EXPR
   yacc.py:2393:    (27) EXPR -> . EXPR semi EXPR
   yacc.py:2393:    (28) EXPR -> . new type
   yacc.py:2393:    (29) EXPR -> . isvoid EXPR
   yacc.py:2393:    (30) EXPR -> . tilde EXPR
   yacc.py:2393:    (31) EXPR -> . not EXPR
   yacc.py:2393:    (32) EXPR -> . identifier lparen rparen
   yacc.py:2393:    (33) EXPR -> . EXPR plus EXPR
   yacc.py:2393:    (34) EXPR -> . EXPR minus EXPR
   yacc.py:2393:    (35) EXPR -> . EXPR times EXPR
   yacc.py:2393:    (36) EXPR -> . EXPR divide EXPR
   yacc.py:2393:    (37) EXPR -> . EXPR lt EXPR
   yacc.py:2393:    (38) EXPR -> . EXPR le EXPR
   yacc.py:2393:    (39) EXPR -> . EXPR equals EXPR
   yacc.py:2393:    (40) EXPR -> . identifier
   yacc.py:2393:    (41) EXPR -> . integer
   yacc.py:2393:    (42) EXPR -> . string
   yacc.py:2393:    (43) EXPR -> . true
   yacc.py:2393:    (44) EXPR -> . false
   yacc.py:2394:
   yacc.py:2504:    esac            shift and go to state 128
   yacc.py:2504:    case            shift and go to state 41
   yacc.py:2504:    let             shift and go to state 37
   yacc.py:2504:    lparen          shift and go to state 38
   yacc.py:2504:    lbrace          shift and go to state 42
   yacc.py:2504:    identifier      shift and go to state 44
   yacc.py:2504:    if              shift and go to state 31
   yacc.py:2504:    while           shift and go to state 43
   yacc.py:2504:    new             shift and go to state 35
   yacc.py:2504:    isvoid          shift and go to state 34
   yacc.py:2504:    tilde           shift and go to state 30
   yacc.py:2504:    not             shift and go to state 39
   yacc.py:2504:    integer         shift and go to state 32
   yacc.py:2504:    string          shift and go to state 36
   yacc.py:2504:    true            shift and go to state 40
   yacc.py:2504:    false           shift and go to state 29
   yacc.py:2506:
   yacc.py:2531:    EXPR                           shift and go to state 76
   yacc.py:2389:
   yacc.py:2390:state 128
   yacc.py:2391:
   yacc.py:2393:    (13) EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .
   yacc.py:2394:
   yacc.py:2504:    at              reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    dot             reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    comma           reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    semi            reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    plus            reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    minus           reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    times           reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    divide          reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    lt              reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    le              reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    equals          reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    rbrace          reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    then            reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    rparen          reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    of              reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    loop            reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    else            reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    pool            reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    fi              reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2504:    in              reduce using rule 13 (EXPR -> case EXPR of identifier colon type rarrow EXPR semi esac .)
   yacc.py:2506:
   yacc.py:3239:
   yacc.py:3240:Conflicts:
   yacc.py:3241:
   yacc.py:3244:shift/reduce conflict for at in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for dot in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for comma in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for semi in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for plus in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for minus in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for times in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for divide in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for lt in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for le in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for equals in state 76 resolved as shift
   yacc.py:3244:shift/reduce conflict for at in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for dot in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for comma in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for semi in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for plus in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for minus in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for times in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for divide in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for lt in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for le in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for equals in state 82 resolved as shift
   yacc.py:3244:shift/reduce conflict for at in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for dot in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for comma in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for semi in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for plus in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for minus in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for times in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for divide in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for lt in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for le in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for equals in state 117 resolved as shift
   yacc.py:3244:shift/reduce conflict for at in state 125 resolved as shift
   yacc.py:3244:shift/reduce conflict for dot in state 125 resolved as shift
   yacc.py:3244:shift/reduce conflict for comma in state 125 resolved as shift
   yacc.py:3244:shift/reduce conflict for semi in state 125 resolved as shift
   yacc.py:3244:shift/reduce conflict for plus in state 125 resolved as shift
   yacc.py:3244:shift/reduce conflict for minus in state 125 resolved as shift
   yacc.py:3244:shift/reduce conflict for times in state 125 resolved as shift
   yacc.py:3244:shift/reduce conflict for divide in state 125 resolved as shift
   yacc.py:3244:shift/reduce conflict for lt in state 125 resolved as shift
   yacc.py:3244:shift/reduce conflict for le in state 125 resolved as shift
   yacc.py:3244:shift/reduce conflict for equals in state 125 resolved as shift
